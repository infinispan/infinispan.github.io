<?xml version="1.0" encoding="utf-8" ?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
  <id>//infinispan.org/</id>
  <title>Infinispan</title>
  <updated>2020-01-28T10:20:46+00:00</updated>
  <link href="//infinispan.org/feed.atom" rel="self" type="application/atom+xml" />
  <link href="//infinispan.org/" rel="alternate" type="text/html" />
  <entry>
    <id>//infinispan.org/blog/2020/01/24/2020-01-24-infinispan-operator-1.1.0/</id>
    <title>Infinispan Operator 1.1.0 is out!</title>
    <updated>2020-01-28T10:20:46+00:00</updated>
    <published>2020-01-24T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2020/01/24/2020-01-24-infinispan-operator-1.1.0/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term="release"></category>
    <category term="operator"></category>
    <summary>
      We&#8217;re pleased to announce
      version 1.1.0 of the Infinispan Operator
      for Kubernetes and OpenShift.
      
      
      This release includes a bunch of very exciting features! Let&#8217;s dig into them:
      
      
      
      
      Full Lifecycle
      
      
      Infinispan Operator 1.1.0 is rated at the Full Lifecycle capacity level, which
      means the Operator now provides advanced cluster management capabilities and
      functionality to handle demanding workloads.
      
      
      One of the key new features in this release is graceful shutdown, which lets
      you bring clusters down safely to avoid data loss.
      
      
      During cluster shutdown, caches can passivate in-memory entries
      to persistent storage along with the internal Infinispan state that maps
      which nodes own which entries. When you bring Infinispan clusters back,
      all your data is...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’re pleased to announce
      &lt;a href=&quot;https://operatorhub.io/operator/infinispan&quot;&gt;version 1.1.0 of the Infinispan Operator&lt;/a&gt;
      for Kubernetes and OpenShift.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release includes a bunch of very exciting features! Let’s dig into them:&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_full_lifecycle&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_full_lifecycle&quot;&gt;&lt;/a&gt;Full Lifecycle&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan Operator 1.1.0 is rated at the &lt;code&gt;Full Lifecycle&lt;/code&gt; capacity level, which
      means the Operator now provides advanced cluster management capabilities and
      functionality to handle demanding workloads.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;One of the key new features in this release is graceful shutdown, which lets
      you bring clusters down safely to avoid data loss.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;During cluster shutdown, caches can passivate in-memory entries
      to persistent storage along with the internal Infinispan state that maps
      which nodes own which entries. When you bring Infinispan clusters back,
      all your data is restored to memory.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Check out the &lt;a href=&quot;https://infinispan.org/infinispan-operator/master/operator.html#shutting_down-start&quot;&gt;Graceful Shutdown&lt;/a&gt;
      docs for more information.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Graceful shutdown also enables the Infinispan Operator to
      perform reliable upgrades.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When a new version of the Infinispan Operator starts,
      it checks for running Infinispan clusters that were created by an older Operator version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If the Operator detects a cluster that requires upgrade, it invokes a graceful shutdown
      on the cluster and then brings it back with the new Infinispan version.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can perform upgrade manually or automatically with the
      &lt;a href=&quot;https://docs.openshift.com/container-platform/4.3/operators/understanding-olm/olm-understanding-olm.html&quot;&gt;Operator Lifecycle Manager&lt;/a&gt; on OpenShift.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Note that Operators installed via the OperatorHub on OpenShift Container Platform are managed by the Operator Lifecyle Manager.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_cache_vs_datagrid&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_cache_vs_datagrid&quot;&gt;&lt;/a&gt;Cache vs DataGrid&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This version of the Infinispan Operator delivers Cache and DataGrid services.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;By default the Operator starts Infinispan clusters as Cache services, which
      provides a quick way to set up in-memory caching that stores data off-heap and
      keeps single copies of data in the cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;DataGrid services, on the other hand, are suited to more advanced use cases where
      you control and define the configuration that you need.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_cross_site_replication&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_cross_site_replication&quot;&gt;&lt;/a&gt;Cross-Site Replication&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Operator simplifies cross-site replication set up with DataGrid services
      so you can back data up between separate Kubernetes or OpenShift clusters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;All you need to do is specify which type of external Kubernetes service to expose,
      the list of all backup locations, access secrets, and the local site name.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Find out more at:
      &lt;a href=&quot;https://infinispan.org/infinispan-operator/master/operator.html#configuring_backup_sites&quot;&gt;Cross-Site Replication&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_automatic_tls_configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_automatic_tls_configuration&quot;&gt;&lt;/a&gt;Automatic TLS configuration&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you’re running on Openshift and have a service that serves certificates,
      the Operator automatically asks for certificates sets up TLS for your
      endpoint connections. Encrypted by default with zero effort!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_get_it_use_it_ask_us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it_use_it_ask_us&quot;&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Try the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-simple-tutorials/tree/master/operator&quot;&gt;simple tutorial&lt;/a&gt;
      for the Operator, which has been updated for this version.
      The tutorial shows how to install the Operator manually,
      but it can also be installed via the Operator Hub on OpenShift.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can &lt;a href=&quot;https://github.com/infinispan/infinispan-operator/issues&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;,
      ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Finally, a detailed list of issues and features for this version can be found
      &lt;a href=&quot;https://github.com/infinispan/infinispan-operator/issues?q=milestone%3A1.1.0+is%3Aclosed&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/12/23/infinispan-10/</id>
    <title>Infinispan 10.1.0.Final</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-12-23T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/12/23/infinispan-10/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term="release"></category>
    <summary>
      Hi there,
      
      
      we finish 2019 in style with the Final release of Infinispan 10.1, codenamed "Turia".
      
      
      
      
      Server console
      
      
      The highlight of this release is the new server console which is now based on Patterfly 4 and React.js.
      We will soon have a blog post detailing the work that has been done and our future plans. In the meantime, here are a few screenshots:
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      Security
      
      
      Many changes related to security have happened since 10.0:
      
      
      
      
      Native SSL/TLS provided by WildFly OpenSSL. The server only ships with native libraries for Linux x86_64, but you can download natives for other platforms and architectures
      
      
      Improved usability of the Hot Rod client configuration with...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Hi there,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;we finish 2019 in style with the Final release of Infinispan 10.1, codenamed &lt;a href=&quot;https://www.cervezaturia.es&quot;&gt;&quot;Turia&quot;&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_server_console&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_server_console&quot;&gt;&lt;/a&gt;Server console&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The highlight of this release is the new server console which is now based on &lt;a href=&quot;https://www.patternfly.org/v4/&quot;&gt;Patterfly 4&lt;/a&gt; and &lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt;.
      We will soon have a blog post detailing the work that has been done and our future plans. In the meantime, here are a few screenshots:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;a class=&quot;image&quot; href=&quot;//infinispan.org/blog/img/ispn101welcome.png&quot;&gt;&lt;img src=&quot;//infinispan.org/blog/thumb/ispn101welcome.png&quot; alt=&quot;Welcome Page&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;a class=&quot;image&quot; href=&quot;//infinispan.org/blog/img/ispn101console.png&quot;&gt;&lt;img src=&quot;//infinispan.org/blog/thumb/ispn101console.png&quot; alt=&quot;Console Caches&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;imageblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;a class=&quot;image&quot; href=&quot;//infinispan.org/blog/img/ispn101console2.png&quot;&gt;&lt;img src=&quot;//infinispan.org/blog/thumb/ispn101console2.png&quot; alt=&quot;Console Cache Stats&quot; /&gt;&lt;/a&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_security&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_security&quot;&gt;&lt;/a&gt;Security&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Many changes related to security have happened since 10.0:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Native SSL/TLS provided by &lt;a href=&quot;https://github.com/wildfly-security/wildfly-openssl&quot;&gt;WildFly OpenSSL&lt;/a&gt;. The server only ships with native libraries for Linux x86_64, but you can download natives for other platforms and architectures&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Improved usability of the Hot Rod client configuration with better defaults&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Full support for authorization for admin operations via the RESTful endpoint&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Console authentication support&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Kerberos authentication for both Hot Rod (GSSAPI, GS2) and HTTP/Rest (SPNEGO)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Improved LDAP realm configuration with connection tuning and attribute references&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Rewritten client/server security documentation including examples on how to create certificate chains, connecting to various LDAP directories and &lt;a href=&quot;https://www.keycloak.org/&quot;&gt;KeyCloak&lt;/a&gt;, etc.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_server&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_server&quot;&gt;&lt;/a&gt;Server&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;A command-line switch to specify an alternate logging configuration file&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Query and indexing operations/stats are now exposed over the RESTful API&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Tasks and Scripting support&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Support for binding the endpoints to 0.0.0.0 / ::0 (aka INADDR_ANY)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_non_blocking&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_non_blocking&quot;&gt;&lt;/a&gt;Non-blocking&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;More work has landed on the quest to completely remove blocking calls from our internals. The following have been made non-blocking:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;State transfer&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The size operation&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Cache stream ops with primitive types&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Additionally caches now have a reactive Publisher which is intended as a fully non-blocking approach to distributed operations.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_query&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_query&quot;&gt;&lt;/a&gt;Query&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The query components have been reorganized so that they are more modular.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_monitoring&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_monitoring&quot;&gt;&lt;/a&gt;Monitoring&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The introduction of histogram and timer metrics.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The &lt;code&gt;/metrics&lt;/code&gt; endpoint now includes &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;vendor&lt;/code&gt; microprofile metrics&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_stores&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_stores&quot;&gt;&lt;/a&gt;Stores&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The REST cache store has been updated to use the v2 RESTful API.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_removals_and_deprecations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_removals_and_deprecations&quot;&gt;&lt;/a&gt;Removals and deprecations&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The old RESTful API (v1) has been partially reinstated until 11.0. Bulk ops are disabled.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The Infinispan Lucene Directory has been deprecated.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The memcached protocol server has been deprecated. If you were relying on this, come and talk to us about working on a binary protocol implementation.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_bug_fixes_clean_ups_and_documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_bug_fixes_clean_ups_and_documentation&quot;&gt;&lt;/a&gt;Bug fixes, clean-ups and documentation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Over 160 issues fixed including a lot of documentation updates. See the &lt;a href=&quot;https://issues.redhat.com/issues/?filter=12344079&quot;&gt;full list of changes and fixes&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_get_it_use_it_ask_us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it_use_it_ask_us&quot;&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please &lt;a href=&quot;https://infinispan.org/download/&quot;&gt;download&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;,
      ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/12/09/infinispan-10/</id>
    <title>Infinispan 10.1.0.CR1</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-12-09T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/12/09/infinispan-10/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term="release candidate"></category>
    <category term="release"></category>
    <summary>
      Dear Infinispan community,
      
      
      as we are closing in on 10.1, we have been working on a lot of polishing and bugfixing.
      
      
      
      
      Server
      
      
      
      
      The new console has received a lot of improvements,
      
      
      A new welcome page
      
      
      A command-line switch to specify an alternate logging configuration file
      
      
      
      
      
      
      Query
      
      
      The query components have been reorganized so that they are more modular.
      
      
      
      
      Monitoring
      
      
      
      
      The introduction of histogram and timer metrics.
      
      
      
      
      
      
      Stores
      
      
      
      
      The REST cache store has been updated to use the v2 RESTful API.
      
      
      
      
      
      
      Removals and deprecations
      
      
      
      
      The old RESTful API (v1) has been removed
      
      
      The Infinispan Lucene Directory has been deprecated.
      
      
      The memcached protocol server has been deprecated. If you were relying on this, come and talk to...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan community,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;as we are closing in on 10.1, we have been working on a lot of polishing and bugfixing.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_server&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_server&quot;&gt;&lt;/a&gt;Server&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The new console has received a lot of improvements,&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;A new welcome page&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;A command-line switch to specify an alternate logging configuration file&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_query&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_query&quot;&gt;&lt;/a&gt;Query&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The query components have been reorganized so that they are more modular.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_monitoring&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_monitoring&quot;&gt;&lt;/a&gt;Monitoring&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The introduction of histogram and timer metrics.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_stores&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_stores&quot;&gt;&lt;/a&gt;Stores&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The REST cache store has been updated to use the v2 RESTful API.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_removals_and_deprecations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_removals_and_deprecations&quot;&gt;&lt;/a&gt;Removals and deprecations&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The old RESTful API (v1) has been removed&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The Infinispan Lucene Directory has been deprecated.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The memcached protocol server has been deprecated. If you were relying on this, come and talk to us about working on a binary protocol implementation.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_bug_fixes_clean_ups_and_documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_bug_fixes_clean_ups_and_documentation&quot;&gt;&lt;/a&gt;Bug fixes, clean-ups and documentation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Over 40 issues fixed including a lot of documentation updates. See the &lt;a href=&quot;&quot;&gt;full list of changes and fixes&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_get_it_use_it_ask_us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it_use_it_ask_us&quot;&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;,
      ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 10.1.0.Final is scheduled for December the 20th.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/12/02/image/</id>
    <title>Infinispan's new image</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-12-02T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/12/02/image/" rel="alternate" type="text/html" />
    <author>
      <name>Ryan Emerson</name>
    </author>
    <category term="docker"></category>
    <summary>
      Infinispan 10 introduced a new server, which does not utilise the same
      launch commands and configuration as the legacy 9.4 wildfly based server. Therefore, we decided that this was an excellent
      opportunity to rewrite our container image from scratch to better suite the capabilities of the new server and to provide
      all the functionality required by the Infinispan Operator.
      
      
      This post focuses on the server image&#8217;s architecture. Future blog posts will focus on more advanced configurations, as well as
      example usage and deployment scenarios such as deploying a cluster using Kubernetes StatefulSets.
      
      
      
      
      Show me the code!
      
      
      The source code for the Infinispan image has a new home....
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 10 introduced a &lt;a href=&quot;https://infinispan.org/blog/2019/11/11/serverng/&quot;&gt;new server&lt;/a&gt;, which does not utilise the same
      launch commands and configuration as the legacy 9.4 wildfly based server. Therefore, we decided that this was an excellent
      opportunity to rewrite our container image from scratch to better suite the capabilities of the new server and to provide
      all the functionality required by the &lt;a href=&quot;https://infinispan.org/blog/2019/11/25/infinispan-operator-1/&quot;&gt;Infinispan Operator&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This post focuses on the server image’s architecture. Future blog posts will focus on more advanced configurations, as well as
      example usage and deployment scenarios such as deploying a cluster using Kubernetes StatefulSets.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_show_me_the_code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_show_me_the_code&quot;&gt;&lt;/a&gt;Show me the code!&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The source code for the Infinispan image has a new home. The image can be found at &lt;a href=&quot;https://github.com/infinispan/infinispan-images&quot; class=&quot;bare&quot;&gt;https://github.com/infinispan/infinispan-images&lt;/a&gt;.
      Currently this repository only contains the server image, however our intention is for this to also be the home for all
      future Infinispan related images.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_wheres_the_dockerfile&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_wheres_the_dockerfile&quot;&gt;&lt;/a&gt;Where’s the Dockerfile?&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The most noticable change when looking at the repository is that there is no &lt;code&gt;Dockerfile&lt;/code&gt; in the source tree. This is because
      we decided to utilise the open-source tool &lt;a href=&quot;https://cekit.io/&quot;&gt;CEKit&lt;/a&gt; to build our images. CEKit is an image creation tool
      that allows container images to be created using multiple build engines (e.g. docker, &lt;a href=&quot;https://buildah.io/&quot;&gt;Buildah&lt;/a&gt;, &lt;a href=&quot;https://podman.io/&quot;&gt;Podman&lt;/a&gt;)
      with a single configuration. Installation instructions can be found &lt;a href=&quot;https://docs.cekit.io/en/latest/handbook/installation/instructions.html&quot;&gt;here&lt;/a&gt;,
      but the basic command to create a Docker based image is as follows.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;cekit build docker&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;CEKit leverages &lt;code&gt;.yaml&lt;/code&gt; files for all configuration, opposed to a Dockerfile, as this allows for build time overriding of
      image properties. For example, with CEKit it’s possible to override the server artifact version without modifying any files,
      instead the following is passed as a build parameter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;cekit build --overrides '{&quot;artifacts&quot;: [{&quot;name&quot;: &quot;server.zip&quot;, &quot;path&quot;: &quot;infinispan-server-10.0.0-SNAPSHOT.zip&quot;}]}' docker&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;More detailed instructions about how to build the server image from source can be found in the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-images/tree/10.0.x#creating-images&quot;&gt;image’s documentation&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_ok_so_where_can_i_get_a_pre_built_image&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_ok_so_where_can_i_get_a_pre_built_image&quot;&gt;&lt;/a&gt;Ok so where can I get a pre-built image?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Previously the Infinispan images were deployed exclusively under the &lt;code&gt;jboss&lt;/code&gt; namespace at &lt;a href=&quot;https://hub.docker.com/r/jboss/infinispan-server/&quot;&gt;jboss/infinispan-server&lt;/a&gt;,
      however this repository has now been deprecated and will be removed eventually.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Instead, all Infinispan images will now be released under the &lt;code&gt;infinispan&lt;/code&gt; namespace and are hosted at both &lt;a href=&quot;https://quay.io/infinispan/server&quot;&gt;Quay.io&lt;/a&gt;
      and &lt;a href=&quot;https://hub.docker.com/r/infinispan/server&quot;&gt;Docker Hub&lt;/a&gt;, as &lt;code&gt;quay.io/infinispan/server&lt;/code&gt; and &lt;code&gt;infinispan/server&lt;/code&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_getting_started&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_getting_started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To get started with infinispan server on your local machine simply execute:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;docker run -p 11222:11222 infinispan/server&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;By default the image has authentication enabled on all exposed endpoints. When executing the above command the image
      automatically generates a username/password combo, prints the values to stdout and then starts the Infinispan server with
      the authenticated Hotrod and Rest endpoints exposed on port 11222. Therefore, it’s necessary to utilise the printed
      credentials when attempting to access the exposed endpoints via clients.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It’s also possible to provide a username/password combination via environment variables like so:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;docker run -p 11222:11222 -e USER=&quot;Titus Bramble&quot; -e PASS=&quot;Shambles&quot; infinispan/server&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_connecting_via_hotrod&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_connecting_via_hotrod&quot;&gt;&lt;/a&gt;Connecting via Hotrod&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Using the credentials passed in the command above, it is now possible to connect via the HotRod client using the following
      &lt;code&gt;hotrod-client.properties&lt;/code&gt; file. Note, that the following SASL properties must be configured on your client, with the
      username and password properties changed as required, otherwise the connection will fail:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;infinispan.remote.auth-realm=default
      infinispan.remote.auth-server-name=infinispan
      infinispan.remote.auth-username=Titus Bramble
      infinispan.remote.auth-password=Shambles&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_connecting_via_rest&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_connecting_via_rest&quot;&gt;&lt;/a&gt;Connecting via REST&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The REST endpoint is configured to utilise the DIGEST protocol, therefore it’s necessary for the HTTP client to authenticate
      requests. For example, the name of all caches can be retrieved via the following curl command:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt; curl --digest -u &quot;Titus Bramble:Shambles&quot; http://localhost:11222/rest/v2/cache&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_further_reading&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_further_reading&quot;&gt;&lt;/a&gt;Further Reading&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For more detailed information abou how to use the image, please consult the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-images/blob/10.0.x/README.md&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the next blog post we will look at how the server can be configured for more advanced use-cases by supplying configuration
      and identity &lt;code&gt;.yaml&lt;/code&gt; files.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_get_it_use_it_ask_us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it_use_it_ask_us&quot;&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;,
      ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/11/25/infinispan-operator-1/</id>
    <title>Infinispan Operator 1.0.1</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-11-25T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/11/25/infinispan-operator-1/" rel="alternate" type="text/html" />
    <author>
      <name>Vittorio Rigamonti</name>
    </author>
    <category term="dev-preview"></category>
    <category term="release"></category>
    <summary>
      Dear Infinispan community,
      
      
      we know you are happy with the new shining 10.0.0 Infinispan release, but if you are among those who are missing a new operator version for safely running your Infinispan Chupachabra in the clound, this post is for you!
      
      
      
      
      Versioning and channels
      
      This is our first blog post about 1.0.x operator series (yeah, sorry 1.0.0 we forgot about you) and as you can notice there&#8217;s no Alpha, Beta or CR label at the end of the release tag.  This is because OperatorHub and Openshift Catalog only allow numerical version like Maj.Min.Mic and instead of labels we now use the...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan community,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;we know you are happy with the new shining 10.0.0 Infinispan release, but if you are among those who are missing a new operator version for safely running your Infinispan Chupachabra in the clound, this post is for you!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_versioning_and_channels&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_versioning_and_channels&quot;&gt;&lt;/a&gt;Versioning and channels&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is our first blog post about 1.0.x operator series (yeah, sorry 1.0.0 we forgot about you) and as you can notice there’s no Alpha, Beta or CR label at the end of the release tag.  This is because OperatorHub and Openshift Catalog only allow numerical version like Maj.Min.Mic and instead of labels we now use the channel to indicate the stability of a release. We have 2 live channels at the moment for the Infinispan operator: &lt;code&gt;stable&lt;/code&gt; and &lt;code&gt;dev-preview&lt;/code&gt;. Current &lt;code&gt;stable&lt;/code&gt; is 0.3.2 which is for the 9.x Infinispan cluster and current &lt;code&gt;dev-preview&lt;/code&gt; is 1.0.1 which works with 10.x clusters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_new_features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_new_features&quot;&gt;&lt;/a&gt;New features&lt;/h3&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;New Infinispan image configuration: we cleaned up the image configuration process: instead of rely on a large set of env variables, now the operator configures the Infinispan image via a single .yaml file.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Container configurability: CR .yaml file lets you configure memory and CPU (and also extras Java opts) assigned to the container;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Encryption: TLS can be setup providing TLS certificates or using platform service as the Openshift seriving certs service (TLS will be on by default in the next release);&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;We now have some good docs: &lt;a href=&quot;https://infinispan.org/infinispan-operator/master/operator.html&quot; class=&quot;bare&quot;&gt;https://infinispan.org/infinispan-operator/master/operator.html&lt;/a&gt;;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Project README has been also improved: &lt;a href=&quot;https://github.com/infinispan/infinispan-operator/blob/1.0.1/README.md&quot; class=&quot;bare&quot;&gt;https://github.com/infinispan/infinispan-operator/blob/1.0.1/README.md&lt;/a&gt;;&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_get_it&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it&quot;&gt;&lt;/a&gt;Get it&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Operator 1.0.1 works on Kind/Kubernetes 1.16 (CI) and Openshift 3.11, 4.x (developed on). You can install it:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;manually, follow the README;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;with OLM on Kubernetes, &lt;a href=&quot;https://operatorhub.io/operator/infinispan/dev-preview/infinispan-operator.v1.0.0&quot; class=&quot;bare&quot;&gt;https://operatorhub.io/operator/infinispan/dev-preview/infinispan-operator.v1.0.0&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;with OLM from the Openshift Operator Catalog&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;And remember: it’s a dev-preview release, you can have a lot of fun with it!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_contribute&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_contribute&quot;&gt;&lt;/a&gt;Contribute&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As usual source code is open at: &lt;a href=&quot;https://github.com/infinispan/infinispan-operator&quot; class=&quot;bare&quot;&gt;https://github.com/infinispan/infinispan-operator&lt;/a&gt;. You can see what’s going on, comment the code or the new pull requests, ask for new features and also develop them!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Thanks for following us,
      Infinispan&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/11/18/infinispan-1010beta1/</id>
    <title>Infinispan 10.1.0.Beta1</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-11-18T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/11/18/infinispan-1010beta1/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term="beta"></category>
    <category term="release"></category>
    <summary>
      Dear Infinispan community,
      
      
      Quick on the heels of Infinispan 10.0 here comes the first Beta or 10.1.
      
      
      
      
      Server
      
      
      This release closes the gap between the legacy server and the new server we introduced in 10.0. In particular:
      
      
      
      
      The reworked console (which will be described in detail in an upcoming series of blog posts)
      
      
      Kerberos authentication for both Hot Rod (GSSAPI, GS2) and HTTP/Rest (SPNEGO)
      
      
      Query and indexing operations/stats are now exposed over the RESTful API
      
      
      Tasks and Scripting support
      
      
      
      
      
      
      Non-blocking
      
      
      More work has landed on the quest to completely remove blocking calls from our internals. The following have been made non-blocking:
      
      
      
      
      the size operation
      
      
      cache stream ops with primitive types
      
      
      
      
      Additionally caches...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan community,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Quick on the heels of Infinispan 10.0 here comes the first Beta or 10.1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_server&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_server&quot;&gt;&lt;/a&gt;Server&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release closes the gap between the legacy server and the new server we introduced in 10.0. In particular:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The reworked console (which will be described in detail in an upcoming series of blog posts)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Kerberos authentication for both Hot Rod (GSSAPI, GS2) and HTTP/Rest (SPNEGO)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Query and indexing operations/stats are now exposed over the RESTful API&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Tasks and Scripting support&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_non_blocking&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_non_blocking&quot;&gt;&lt;/a&gt;Non-blocking&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;More work has landed on the quest to completely remove blocking calls from our internals. The following have been made non-blocking:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;the size operation&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;cache stream ops with primitive types&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Additionally caches now have a reactive Publisher which is intended as a fully non-blocking approach to distributed operations.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_components_upgrades&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_components_upgrades&quot;&gt;&lt;/a&gt;Components upgrades&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;rxjava 2.2.12&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;smallrye metrics 2.3.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;microprofile metrics 2.2&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_bug_fixes_clean_ups_and_documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_bug_fixes_clean_ups_and_documentation&quot;&gt;&lt;/a&gt;Bug fixes, clean-ups and documentation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Over 40 bug fixes. See the &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12343102&quot;&gt;full list of changes and fixes&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_get_it_use_it_ask_us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it_use_it_ask_us&quot;&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;,
      ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 10.1.0.CR1 is scheduled for December the 7th.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/11/11/serverng/</id>
    <title>Infinispan's new server</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-11-11T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/11/11/serverng/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term="server"></category>
    <summary>
      One of the biggest changes in Infinispan 10 is the new server, which replaces the WildFly-based server we had been using up until 9.x.
      
      
      This is the first of a series of blog posts which will describe the new server, how to use it, how to configure it and how to deploy it in your environment. More specifically, this post will focus mostly on the reasons behind the change, while the next ones will be of a more practical nature.
      
      
      
      
      A history of servers
      
      
      Infinispan has had a server implementing the Hot Rod protocol since 4.1. Originally it was just a main class...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;One of the biggest changes in Infinispan 10 is the new server, which replaces the WildFly-based server we had been using up until 9.x.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is the first of a series of blog posts which will describe the new server, how to use it, how to configure it and how to deploy it in your environment. More specifically, this post will focus mostly on the reasons behind the change, while the next ones will be of a more practical nature.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_a_history_of_servers&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_a_history_of_servers&quot;&gt;&lt;/a&gt;A history of servers&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan has had a server implementing the Hot Rod protocol since 4.1. Originally it was just a main class which bootstrapped the server protocol. It was configured via the same configuration file used by the embedded library, it had no security and only handled Hot Rod.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Over time both a RESTful HTTP and a Memcached protocol were added and could be bootstrapped in the same way.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;While the server bootstrap code was trivial, it was not going to scale to support all the things we needed (security, management, provisioning, etc). We therefore decided to build our next server on top of the very robust foundation provided by WildFly (aka, the application server previously known as JBoss AS 7), which made its first appearance in 5.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Integration with WildFly’s management model was not trivial but it gave us all of the things we were looking for and more, such as deployments, data sources, CLI, console, etc. It also came with a way to provision multiple nodes and manage them from a central controller, i.e. domain mode. All of these facilities however came at the cost of a lot of extra integration code to maintain as well as a larger footprint, both in terms of memory and storage use, caused by a number of subsystems which we had to carry along, even though we didn’t use them directly.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_a_different_server&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_a_different_server&quot;&gt;&lt;/a&gt;A different server&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Fast-forward several versions, and the computing landscape has changed considerably: services are containerized, they are provisioned and managed via advanced orchestration tools like Kubernetes or via configuration management tools like Ansible and the model we were using was overlapping (if not altogether clashing) with the container model, where global configuration is immutable and managed externally.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With the above in mind, we have therefore decided to &lt;em&gt;reboot&lt;/em&gt; our server implementation. During planning and development it has been known affectionately as &lt;em&gt;ServerNG&lt;/em&gt;, but nowadays it is just the &lt;em&gt;Infinispan Server&lt;/em&gt;. The WildFly-based server is now the &lt;em&gt;legacy server&lt;/em&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_configuration&quot;&gt;&lt;/a&gt;Configuration&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new server separates global configuration (clustering, endpoints, security) from the configuration of dynamic resources like caches, counters, etc. This means that global configuration can be made immutable while the ,mutable configuration is stored separately in the global persistence location. In a containerized environment you will place the persistence location onto a volume that will survive restarts.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;h1 id=&quot;_a_quick_two_node_cluster_with_docker&quot; class=&quot;sect0&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_a_quick_two_node_cluster_with_docker&quot;&gt;&lt;/a&gt;A quick two-node cluster with Docker&lt;/h1&gt;
      &lt;div class=&quot;openblock partintro&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting a two-node cluster using the latest version of the server image is easy:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;$ docker run --name ispn1 --hostname ispn1 -e USER=admin -e PASS=admin -p 11222:11222 infinispan/server
      $ docker run --name ispn2 --hostname ispn2 -e USER=admin -e PASS=admin -p 11322:11222 infinispan/server&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The two nodes will discover each other, as can be seen from the logs:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;15:58:21,201 INFO  [org.infinispan.CLUSTER] (jgroups-5,ispn-1-42736) ISPN000094: Received new cluster view for channel infinispan: [ispn-1-42736|1] (2) [ispn-1-42736, ispn-2-51789]
      15:58:21,206 INFO  [org.infinispan.CLUSTER] (jgroups-5,ispn-1-42736) ISPN100000: Node ispn-2-51789 joined the cluster&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Next we will connect to the cluster using the CLI:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;$ docker run -it --rm infinispan/server /opt/infinispan/bin/cli.sh
      [disconnected]&amp;gt; connect http://172.17.0.2:11222
      Username: admin
      Password: *****
      [ispn-1-42736@infinispan//containers/DefaultCacheManager]&amp;gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Next we will create a distributed cache and select it for future operations:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;[ispn-1-42736@infinispan//containers/DefaultCacheManager]&amp;gt; create cache --template=org.infinispan.DIST_SYNC distcache
      [ispn-1-42736@infinispan//containers/DefaultCacheManager]&amp;gt; cache distcache
      [ispn-1-42736@infinispan//containers/DefaultCacheManager/caches/distcache]&amp;gt;&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s insert some data now:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;[ispn-1-42736@infinispan//containers/DefaultCacheManager/caches/distcache]&amp;gt; put k1 v1
      [ispn-1-42736@infinispan//containers/DefaultCacheManager/caches/distcache]&amp;gt; put k2 v2
      [ispn-1-42736@infinispan//containers/DefaultCacheManager/caches/distcache]&amp;gt; ls
      k2
      k1
      [ispn-1-42736@infinispan//containers/DefaultCacheManager/caches/distcache]&amp;gt; get k1
      v1&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now let’s use the RESTful API to fetch one of the entries:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;listingblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;pre&gt;$ curl --digest -u admin:admin http://localhost:11222/rest/v2/caches/distcache/k2
      v2&lt;/pre&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Since we didn’t map persistent volumes to our containers, both the cache and its contents will be lost when we terminate the containers.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the next blog post we will look at configuration and persistence in more depth.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/11/01/infinispan-10/</id>
    <title>Infinispan 10.0.1.Final</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-11-01T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/11/01/infinispan-10/" rel="alternate" type="text/html" />
    <author>
      <name>Ryan Emerson</name>
    </author>
    <category term="final"></category>
    <category term="release"></category>
    <summary>
      We are pleased to announce the availability of Infinispan 10.0.1.Final, which contains several bug fixes.
      
      
      The release notes can be found here.
      
      
      As usual you can ask questions on the
      forum,
      StackOverflow
      and interactively on our Zulip Chat.
      Please report any bugs you find on our
      Issue Tracker...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are pleased to announce the availability of Infinispan 10.0.1.Final, which contains several bug fixes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The release notes can be found &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12343101&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As usual you can ask questions on the
      &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt;,
      &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;
      and interactively on our &lt;a href=&quot;http://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt;.
      Please report any bugs you find on our
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN/summary&quot;&gt;Issue Tracker&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/10/28/infinispan-10-final/</id>
    <title>Infinispan 10.0.0.Final</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-10-28T12:00:00+00:00</published>
    <link href="//infinispan.org/blog/2019/10/28/infinispan-10-final/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term="final"></category>
    <category term="release"></category>
    <summary>
      Dear Infinispan community,
      
      
      We are very pleased to announce the release of Infinispan 10.0 codenamed “Chupacabra”!
      We have been busy making many changes over the last months.
      
      
      
      
      Server
      
      
      Infinispan 10 features a brand new server, replacing the WildFly-based server we’ve had since 5.3 with a smaller, leaner implementation. Here are the highlights:
      
      
      
      
      Reduced disk (50MB vs 170MB) and memory footprint (18MB vs 40MB at boot)
      
      
      Simpler to configure, since it shares the configuration schema with embedded with server-specific extensions
      
      
      Single-port design: the Hot Rod, REST and management endpoint are now served through a single port (11222) with automatic protocol detection between HTTP/1.1, HTTP/2 and Hot Rod. The...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan community,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We are very pleased to announce the release of Infinispan 10.0 codenamed “Chupacabra”!
      We have been busy making many changes over the last months.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_server&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_server&quot;&gt;&lt;/a&gt;Server&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 10 features a brand new server, replacing the WildFly-based server we’ve had since 5.3 with a smaller, leaner implementation. Here are the highlights:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Reduced disk (50MB vs 170MB) and memory footprint (18MB vs 40MB at boot)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Simpler to configure, since it shares the configuration schema with embedded with server-specific extensions&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Single-port design: the Hot Rod, REST and management endpoint are now served through a single port (11222) with automatic protocol detection between HTTP/1.1, HTTP/2 and Hot Rod. The memcached endpoint is handled separately since we don’t implement the binary protocol yet.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;New CLI with data manipulation operations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;New REST-based API for administration&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Security implemented using WildFly Elytron:&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Hot Rod authentication support for PLAIN, DIGEST-MD5, SCRAM, EXTERNAL, OAUTHBEARER&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;HTTP authentication support for BASIC, DIGEST, CLIENT_CERT and TOKEN&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Properties, Certificate Store and LDAP realms&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Integration with KeyCloak&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Caches/counters are created and managed dynamically through Hot Rod / REST&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Because of the amount of restructuring, the web-based Console is not yet available in this release.
      We are working on it and it will be included in 10.1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_rest_endpoint&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_rest_endpoint&quot;&gt;&lt;/a&gt;REST Endpoint&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new API (v2) was introduced and users are encouraged to migrate their applications from the old API.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The v2 API offers a completely redesigned endpoint, including dozens of new operations. Besides allowing to manage caches, it also covers cache containers, counters, cross-site replication, servers and clusters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Apart from the new API, the REST server is now fully non-blocking and also has better performance than 9.4.x.
      It also fully supports authorization.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_marshalling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_marshalling&quot;&gt;&lt;/a&gt;Marshalling&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The internal marshalling capabilities of Infinispan have undergone a significant refactoring in 10.0. The marshalling of internal Infinispan objects and user objects are now truly isolated. This means that it’s now possible to configure Marshaller implementations in embedded mode or on the server, without having to handle the marshalling of Infinispan internal classes. Consequently, it’s possible to easily change the marshaller implementation user for user types, in a similar manner to how users of the HotRod client are accustomed.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As a consequence of the above changes, the default marshaller used for marshalling user types is no longer based upon JBoss Marshalling. Instead we now utilise the ProtoStream library to store user types in the language agnostic Protocol Buffers format. The ProtoStream library provides several advantages over jboss-marshalling, most notably it does not make use of reflection and so is more suitable for use in AOT environments such as Quarkus.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_persistence&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_persistence&quot;&gt;&lt;/a&gt;Persistence&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The persistence SPI has had some much needed TLC, with several deprecations and additions.
      The aim of this work was to ensure that internal Infinispan classes were no longer leaking into the SPI, in order to ensure that custom store implementations only have to be concerned with their data, not internal Infinispan objects.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Stores by default are now segmented when the segmented attribute is not set.
      A segmented store allows for greater iteration performance and less memory usage.
      This is useful for things such as state transfer and other operations that require an entire view of the cache (iteration, size, mass indexer distributed streams etc).
      All of our provided stores now provided being segmented; these include file store, soft index file store, rocks db, jdbc and remote stores.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_container_image&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_container_image&quot;&gt;&lt;/a&gt;Container Image&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To accommodate our brand new server, Infinispan 10.0 also introduces a completely new container image which is much smaller than the old one (366MB vs 684MB) and supports the following features:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Red Hat’s Minimal Universal Base Image based&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Java 11&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Simple yaml configuration&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Authentication (Enabled by default)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Encryption&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Logging&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;XSite support&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new image can be pulled from any of the following repositories:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://quay.io/infinispan/server&quot; class=&quot;bare&quot;&gt;https://quay.io/infinispan/server&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/infinispan/server&quot; class=&quot;bare&quot;&gt;https://hub.docker.com/r/infinispan/server&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/jboss/infinispan-server/&quot; class=&quot;bare&quot;&gt;https://hub.docker.com/r/jboss/infinispan-server/&lt;/a&gt; (deprecated)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_metrics_and_logging&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_metrics_and_logging&quot;&gt;&lt;/a&gt;Metrics and Logging&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan has adopted the MicroProfile Metrics ver. 2.0.2 specification and uses the SmallRye Metrics implementation. MicroProfile Metrics allows applications to gather various metrics and statistics that provide insights into what is happening inside an Infinispan cluster.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The current offering includes both cache container and cache level Gauge type metrics. Histograms and Timers will arrive in the next release of the 10.x stream.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The metrics can be read remotely at the well-known /metrics REST endpoint and use JSON format or optionally the OpenMetrics format, so that they can be processed, stored, visualized and analyzed by compatible tools such as Prometheus.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;But rest assured, the existing JMX support for metrics has not been superseded by REST. JMX is still alive and kicking and we plan to continue developing it and have it available on all runtimes that support it (Quarkus being the notable exception).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Logging categories for the major subsystems have been introduced (CLUSTER, CONTAINER, PERSISTENCE, SERVER, etc) so that it easier to understand what they refer to.
      The server also comes with a JSON logger for easy integration with tools such as Fluentd or the ELK stack.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_quarkus&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_quarkus&quot;&gt;&lt;/a&gt;Quarkus&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan is an official extension in Quarkus!
      If you wish to find out more about Quarkus you can find it at &lt;a href=&quot;https://quarkus.io/&quot; class=&quot;bare&quot;&gt;https://quarkus.io/&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have a very featureful client extension allowing your Quarkus apps to connect to a remote server with lots of the features you are used to: querying, authentication, encryption, counter, dependency injection and others.
      We recently added support for protostream based annotation marshalling.
      If you are curious you can find the code at &lt;a href=&quot;https://github.com/quarkusio/quarkus/tree/master/extensions/infinispan-client&quot; class=&quot;bare&quot;&gt;https://github.com/quarkusio/quarkus/tree/master/extensions/infinispan-client&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan embedded extension was also just added, but has limited functionality due to its infancy.
      Although it will allow you to run an embedded clustered cache in a native executable.
      If you are curious you can find the code at &lt;a href=&quot;https://github.com/quarkusio/quarkus/tree/master/extensions/infinispan-embedded&quot; class=&quot;bare&quot;&gt;https://github.com/quarkusio/quarkus/tree/master/extensions/infinispan-embedded&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan team has also started adding a standalone project to have a Quarkus based Infinispan Server using Infinispan 10 and newer.
      This is still a work in progress, but the new repository can be found at &lt;a href=&quot;https://github.com/infinispan/infinispan-quarkus-server&quot; class=&quot;bare&quot;&gt;https://github.com/infinispan/infinispan-quarkus-server&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Quarkus has a different release cycle than Infinispan, so watch out for more improvements over the following weeks !&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_cross_site_replication&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_cross_site_replication&quot;&gt;&lt;/a&gt;Cross-Site Replication&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Async mode cross-site replication received 3 major improvements:
      Concurrent requests (i.e. write on different keys for example) will be handled simultaneously instead of sequentially.
      Asynchronous mode is now able to detect disconnections between sites and bring the site offline based on &amp;lt;take-offline&amp;gt; configuration (ISPN-10180)
      Tracks and exposes some metrics for asynchronous requests (ISPN-9457)&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_internals&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_internals&quot;&gt;&lt;/a&gt;Internals&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_dependency_injection&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_dependency_injection&quot;&gt;&lt;/a&gt;Dependency Injection&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan’s internal dependency-injection has been completely rewritten so that factories, components and dependencies are discovered and resolved at compile time instead of using runtime reflection. This, together with the marshalling changes and recent JGroups changes, paves the way for usage and native compilation with Quarkus.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_non_blocking&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_non_blocking&quot;&gt;&lt;/a&gt;Non-blocking&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Several internal subsystems have been rewritten to be non-blocking, meaning that they will not hold-on to threads while waiting for I/O:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Non-blocking Hot Rod authentication (ISPN-9841)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Non-blocking REST endpoint (ISPN-10210)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Update internal remote listener code to support non blocking (ISPN-9716)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Update internal embedded listeners to be non blocking (ISPN-9715)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Passivation throughput is increased as well as these operations are done asynchronously.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;In addition cache stores have been made non blocking for the cases of loading an entry and storing into the data container as well write skew checks. With this we should be at a point where we can start consolidating thread pools, so keep a look-out in the upcoming releases.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Distributed Streams utilizing a terminal operator that returns a single value use non blocking communication methods (ISPN-9813)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_off_heap_storage_improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_off_heap_storage_improvements&quot;&gt;&lt;/a&gt;Off Heap Storage Improvements&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Off Heap has added a few improvements to increase performance and reduce memory usage.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Iteration imrpovements (ISPN-10574)&lt;/p&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Removes the need for the address count configuration option&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Dynamically resize underlying bucket&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Reorder bucket iteration to more CPU friendly, less lock acquisiations as well&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;StampedLock instead of ReadWriteLock (ISPN-10681)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_expiration_improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_expiration_improvements&quot;&gt;&lt;/a&gt;Expiration Improvements&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cluster Expiration has been improved to only expire entries on the primary node to reduce the amount of concurrent expirations from multiple nodes in the cluster.
      Also the amount of concurrent expirations on a single node has been improved for better handling.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Additionally, expirations are not replicated cross site to reduce chattiness on the cross site link.
      Also to note that lifespan works fine without this and max-idle expiration does not work properly with cross site.
      So in this case the messages were providing no benefit.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_api&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_api&quot;&gt;&lt;/a&gt;API&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We now have a proper sizeAsync method on the Cache interface.
      This is both for remote and embedded APIs. This method should be preferred over the current size due to not blocking the invoking thread as well as being able to retrieve the size as a long instead of a int.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_configuration&quot;&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;It is now possible to configure JGroups stacks directly from the Infinispan configuration file.
      We use this ability to also allow easily creating multiple stacks (for easy cross-site configuration).
      The distribution comes with several pre-built JGroups stacks for cloud environments which you can quickly adapt for your configuration.
      Additionally you can extend existing JGroups configurations replacing individual protocols.
      This makes it easy, for example, to use a different discovery without worrying about all the other protocols.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_documentation&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_documentation&quot;&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan community documentation has been going through some big changes over the past year.
      The Infinispan 10 release marks the first major step towards adopting a modular structure that supports flexible content for specific use cases.
      On top of that we’ve also been putting lots of effort into transforming our documentation set to adhere to the principles of minimalism that put focus on user goals and delivering leaner, more concise content.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our 10.0 release also incorporates work to organize content into three main types: task, concept, and reference.
      Mapping content to information types makes it easier to write and maintain content by removing worries about style, scope, and other complexities.
      Writers can separate documentation into logical units of information that can stand alone and then assemble topics into tutorials, how-to articles, explanations, and reference material.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You might also notice some changes to the documentation section of our site and updates to the index page for Infinispan 10 docs.
      Hopefully the new layout makes it easier to navigate and find the information you’re looking for.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We hope you find the improvements to the documentation helpful.
      As always, we’re keen to get your feedback and would appreciate.
      And if you feel like getting involved, see the Contributor’s Guide and start writing Infinispan docs today!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_experimental_features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_experimental_features&quot;&gt;&lt;/a&gt;Experimental features&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_reactive_api&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_reactive_api&quot;&gt;&lt;/a&gt;Reactive API&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;First steps to a new Reactive API. This is still a work in progress and the API will see major changes.
      We plan on making this API final and default in Infinispan 11.
      The new API includes a new API module and a new KeyValueStore Hot Rod client where search, continuous search and Key Value store methods are included&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_removaldeprecations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_removaldeprecations&quot;&gt;&lt;/a&gt;Removal/deprecations&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new major release is also an opportunity to do some house-cleaning.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_deprecations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_deprecations&quot;&gt;&lt;/a&gt;Deprecations&lt;/h3&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Deprecate GridFileSystem and org.infinispan.io stream implementations (ISPN-10298)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Deprecated Total Order transaction mode (ISPN-10259)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Deprecated Externalizer, AdvancedExternalizer and @SerializeWith (ISPN-10280)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_removals&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_removals&quot;&gt;&lt;/a&gt;Removals&lt;/h3&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;AtomicMap implementations (ISPN-10230)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Deprecated org.infinispan.io classes (ISPN-10297)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;org.infinispan.tools.ConfigurationConverter (ISPN-10231)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Compatibility mode (ISPN-10370)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;AtomicObjectFactory (ISPN-10414)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;C3P0 and Hikari Connection Pools (ISPN-8087)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Delta and DeltaAware interfaces (ISPN-8071)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;HotRod 1.x support (ISPN-9169)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Tree module (ISPN-10054)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Distributed Executor (ISPN-9784)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_get_it_use_it_ask_us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it_use_it_ask_us&quot;&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;,
      ask questions on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_future&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_future&quot;&gt;&lt;/a&gt;Future&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now that Infinispan 10 is out we plan on delivering a 10.1 release in a couple of months.
      10.1 will generally be a polishing release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/07/15/infinispan-1000beta4/</id>
    <title>Infinispan 10.0.0.Beta4</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-07-15T03:02:00-07:00</published>
    <link href="//infinispan.org/blog/2019/07/15/infinispan-1000beta4/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term="beta"></category>
    <category term="release"></category>
    <summary>
      Dear Infinispan users,
      
      
      it has been a while since our last release and quite a few things have
      been cooking in the Infinispan furnace. Bear in mind that the list below
      should just serve as a summary and that dedicated blogs, documentation
      and examples will appear in the near future.
      
      
      
      
      Server
      
      
      Since 5.3, our server has been built on top of WildFly (JBoss AS7 at the
      time). WildFly gave us a very solid base, including integration with a
      lot of useful components (security, datasources, management etc) but it
      also forced us to maintain a large amount of integration code. We have
      therefore decided to start from a much leaner base...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;it has been a while since our last release and quite a few things have
      been cooking in the Infinispan furnace. Bear in mind that the list below
      should just serve as a summary and that dedicated blogs, documentation
      and examples will appear in the near future.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_server&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_server&quot;&gt;&lt;/a&gt;Server&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Since 5.3, our server has been built on top of WildFly (JBoss AS7 at the
      time). WildFly gave us a very solid base, including integration with a
      lot of useful components (security, datasources, management etc) but it
      also forced us to maintain a large amount of integration code. We have
      therefore decided to start from a much leaner base to build the new
      server which, internally we’ve been calling ServerNG, but which we’re
      now releasing as &quot;Infinispan Server&quot;. The old WildFly-based server is
      still available, but it should be considered &quot;legacy&quot; and will no longer
      receive any feature enhancements.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The new server deserves its own dedicated post, but its main features
      are:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;smaller size (36MB vs 130MB)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;smaller memory footprint (20MB heap usage at boot vs 40MB)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;single-port: the Hot Rod, REST and management endpoint are now served
      through a single-port (11222) with automatic protocol detection between
      HTTP/1.1, HTTP/2 and Hot Rod. The memcached endpoint is handled
      separately since we don’t implement the binary protocol yet.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;security implemented using
      &lt;a href=&quot;https://docs.jboss.org/author/display/WFLY/WildFly+Elytron+Security&quot;&gt;WildFly
      Elytron&lt;/a&gt; currently supporting PLAIN, DIGEST-MD5, SCRAM, EXTERNAL mechs
      for Hot Rod, BASIC, DIGEST, CLIENT_CERT for REST/HTTP
      (OAuth/JWT/GS2/GSSAPI/SPNEGO will be coming in the next releases)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;the server configuration extends the embedded configuration scheme&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;caches/counters are created and managed dynamically through Hot Rod /
      REST.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_marshalling&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_marshalling&quot;&gt;&lt;/a&gt;Marshalling&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan’s marshalling has received a significant overhaul and it is
      now split into three distinct marshallers: Internal, Persistence and
      User (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-7409&quot;&gt;ISPN-7409&lt;/a&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9621&quot;&gt;ISPN-9621&lt;/a&gt;)
      The Persistence marshaller is now based on ProtoBuf allowing for
      long-term compatibility of data stored in memory and in cache stores.
      The Store Migrator has been updated to allow migration from Infinispan
      8.x/9.x cache stores to the new format
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10276&quot;&gt;ISPN-10276&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_core_changes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_core_changes&quot;&gt;&lt;/a&gt;Core changes&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan’s internal dependency-injection has been completely rewritten
      so that factories, components and dependencies are discovered and
      resolved at compile time instead of using runtime reflection. This,
      together with the marshalling changes and recent JGroups changes, paves
      the way for usage and native compilation with
      &lt;a href=&quot;https://quarkus.io/&quot;&gt;Quarkus&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_rest&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_rest&quot;&gt;&lt;/a&gt;REST&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The REST API is continuing its overhaul with the following additions to
      the v2 API&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Cluster Resource
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10268&quot;&gt;ISPN-10268&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Cache Resource (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9772&quot;&gt;ISPN-9772&lt;/a&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10392&quot;&gt;ISPN-10392&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Counter Resource
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10151&quot;&gt;ISPN-10151&lt;/a&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10152&quot;&gt;ISPN-10152&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The REST endpoint now fully supports authorization
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-8736&quot;&gt;ISPN-8736&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_reactive_api&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_reactive_api&quot;&gt;&lt;/a&gt;Reactive API&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The first implementation of our new Reactive API have been merged. This
      is still work in progress and the API will receive major changes until
      the Final release.
      The new API includes a new API module and a new KeyValueStore Hot Rod
      client where search, continuous search and Key Value store methods are
      included.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_cross_site_replication&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_cross_site_replication&quot;&gt;&lt;/a&gt;Cross-Site Replication&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Async mode cross-site replication received 2 major improvements:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;async mode is now able to detect disconnections between sites and
      bring the site offline based on &amp;lt;take-offline&amp;gt; configuration
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10180&quot;&gt;ISPN-10180&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;track and exposes the average replication times for asynchronous
      requests (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9457&quot;&gt;ISPN-9457&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_non_blocking&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_non_blocking&quot;&gt;&lt;/a&gt;Non-blocking&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Non-blocking Hot Rod authentication
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9841&quot;&gt;ISPN-9841&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Non-blocking REST endpoint
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10210&quot;&gt;ISPN-10210&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Update internal remote listener code to support non blocking
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9716&quot;&gt;ISPN-9716&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Update internal embedded listeners to be non blocking
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9715&quot;&gt;ISPN-9715&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_removaldeprecations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_removaldeprecations&quot;&gt;&lt;/a&gt;Removal/deprecations&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A new major release is also an opportunity to do some house cleaning.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_deprecations&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_deprecations&quot;&gt;&lt;/a&gt;Deprecations&lt;/h3&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Deprecate GridFileSystem and org.infinispan.io stream implementations
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10298&quot;&gt;ISPN-10298&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Deprecated Total Order transaction mode
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10259&quot;&gt;ISPN-10259&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_removals&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_removals&quot;&gt;&lt;/a&gt;Removals&lt;/h3&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;AtomicMap implementations removed
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10230&quot;&gt;ISPN-10230&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Remove deprecated org.infinispan.io classes
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10297&quot;&gt;ISPN-10297&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Remove org.infinispan.tools.ConfigurationConverter
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10231&quot;&gt;ISPN-10231&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Remove compatibility mode
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-10370&quot;&gt;ISPN-10370&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you are curious you can read the
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12340951&quot;&gt;detailed
      release notes&lt;/a&gt; including all fixed issues.
      As usual you can ask questions on the
      &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt;,
      &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;
      and interactively on our &lt;a href=&quot;http://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt;.
      Please report any bugs you find on our
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN/summary&quot;&gt;Issue Tracker.&lt;/a&gt;
      Going back to our three-week schedule, our next release will be Beta5,
      three weeks from now.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/07/12/infinispan-operator-030-expands/</id>
    <title>Infinispan Operator 0.3.0 expands container and security configuration!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-07-12T02:58:00-07:00</published>
    <link href="//infinispan.org/blog/2019/07/12/infinispan-operator-030-expands/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term="release"></category>
    <category term="openshift"></category>
    <category term="kubernetes"></category>
    <category term="operator"></category>
    <summary>
      Infinispan Operator 0.3.0 is now available with expanded configuration
      and security options:
      
      
      
      
      Container Configuration
      
      With this release of the Infinispan Operator, you can configure explicit
      CPU and memory limits for individual containers. The defaults
      are 0.5 CPUs and 512Mi of memory.
      
      
      The Operator also lets you pass extra JVM options, which is useful for
      tracking native memory consumption or extra GC logging parameters.
      
      
      
      Security Configuration
      
      Starting with 0.3.0, credentials are automatically generated for data
      connector and management users when you instantiate the Infinispan
      Operator.
      
      
      The default usernames are developer and admin for the data connector
      user and management user, respectively.
      
      
      Generated passwords are stored in Kubernetes
      Secret instances.
      You can extract the passwords as follows:
      
      
      For convenience, the default usernames are also stored in the secret.
      Using...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan Operator 0.3.0 is now available with expanded configuration
      and security options:&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_container_configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_container_configuration&quot;&gt;&lt;/a&gt;Container Configuration&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With this release of the Infinispan Operator, you can configure explicit
      CPU and memory limits for individual containers. The defaults
      are 0.5 CPUs and 512Mi of memory.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Operator also lets you pass extra JVM options, which is useful for
      tracking native memory consumption or extra GC logging parameters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_security_configuration&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_security_configuration&quot;&gt;&lt;/a&gt;Security Configuration&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting with 0.3.0, credentials are automatically generated for data
      connector and management users when you instantiate the Infinispan
      Operator.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The default usernames are developer and admin for the data connector
      user and management user, respectively.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Generated passwords are stored in Kubernetes
      &lt;a href=&quot;https://kubernetes.io/docs/concepts/configuration/secret/&quot;&gt;Secret&lt;/a&gt; instances.
      You can extract the passwords as follows:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For convenience, the default usernames are also stored in the secret.
      Using the &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; command line tool, you can
      inspect both the username and password values with a single command:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you want to set custom credentials for the data connector and
      management users, create Kubernetes Secret instances as follows:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When using a Credentials type authentication, the referenced secrets
      must contain username and password fields.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_trying_it_out&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_trying_it_out&quot;&gt;&lt;/a&gt;Trying It Out!&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The easiest way to get started with the Infinispan Operator is via the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-simple-tutorials/tree/master/operator&quot;&gt;simple
      tutorial&lt;/a&gt;. The Operator is compatible with vanilla Kubernetes
      environments, such as Minikube, as well as Red Hat OpenShift.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_available_via_operator_hub&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_available_via_operator_hub&quot;&gt;&lt;/a&gt;Available via Operator Hub&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Install the Infinispan Operator directly from the Operator Hub, which is
      available out of the box on all OpenShift 4 versions. If you’re using a
      vanilla Kubernertes environment, you might need to install the Operator
      Lifecycle Manager before you can install via the Operator Hub.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Operator is also included in the community for Kubernetes
      Operators is available
      from &lt;a href=&quot;https://operatorhub.io/operator/infinispan&quot;&gt;operatorhub.io&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_whats_next&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_whats_next&quot;&gt;&lt;/a&gt;What’s Next?&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Operator configuration does not yet provide all capabilities
      available for Infinispan servers. We’re working through a process of
      configuration specification that distills the server configuration into
      a simple, easy to use, set of configuration options. The current
      proposal is being discussed openly
      &lt;a href=&quot;https://github.com/infinispan/infinispan-operator/pull/77&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 10 brings a brand new server that’s no longer based on
      WildFly. The Operator 0.x series will remain focused on Infinispan 9.x
      server, with Operator 1.x series focusing on Infinispan 10 and
      onwards.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/04/15/infinispan-on-tour-march-april-2019/</id>
    <title>Infinispan on tour, March-April 2019</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-04-15T04:08:00-07:00</published>
    <link href="//infinispan.org/blog/2019/04/15/infinispan-on-tour-march-april-2019/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term=" conference"></category>
    <category term="public speaking"></category>
    <category term="greach conf"></category>
    <category term="breizh camp"></category>
    <category term="voxxed days milano"></category>
    <summary>
      *
      *
      
      
      Infinispan has been on tour!!
      
      
       I - Katia Aresti - had the chance to
      present 3 talks in 3 different conferences and countries during the last
      month:
      
      
      Breizh Camp 2019 the 22th March, Rennes
      (France)
      
      
      
      
      
      Greach Conf 2019, 29th March, Madrid
      (Spain)
      
      
      
      
      
      Voxxed Days Milano 2019, 13th April,
      Milan (Italy)
      
      
      
      
      
      
      
      Breizh Camp
      
      
      2019 has been BreizhCamp&#8217;s 9th - Code Busters - edition and they
      sold-out the conference in a matter of hours (wow).
      
      
      I did not have the time to attend any talk. Unfortunately, due to my
      personal schedule, I arrived on Thursday night, and I was presenting on
      Friday after lunch. This was the second time I was giving this
      presentation, but I did lot&#8217;s...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;*
      *&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Infinispan has been on tour!!&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt; I - &lt;a href=&quot;https://twitter.com/karesti&quot;&gt;Katia Aresti&lt;/a&gt; - had the chance to
      present 3 talks in 3 different conferences and countries during the last
      month:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.breizhcamp.org/&quot;&gt;Breizh Camp 2019&lt;/a&gt; the 22th March, Rennes
      (France)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://www.breizhcamp.org/img/logo.png&quot; alt=&quot;BreizhCamp - 9Ã¨me Ã©dition - 20&quot; width=&quot;21 et 22 Mars 2019 logo&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.greachconf.com/&quot;&gt;Greach Conf 2019&lt;/a&gt;, 29th March, Madrid
      (Spain)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://static1.squarespace.com/static/5bbb8964ab1a624b2849c12c/t/5bbb89d3ec212de44fe418ea/1553429592481/?format=1500w&quot; alt=&quot;Greach 2019&quot; width=&quot;200&quot; height=&quot;57&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://voxxeddays.com/milan/&quot;&gt;Voxxed Days Milano 2019&lt;/a&gt;, 13th April,
      Milan (Italy)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://voxxeddays.com/milan/wp-content/uploads/sites/47/2018/06/Milano-grey.png&quot; alt=&quot;VoxxedDays Milan&quot; width=&quot;200&quot; height=&quot;55&quot; /&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_breizh_camp&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_breizh_camp&quot;&gt;&lt;/a&gt;Breizh Camp&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;2019 has been BreizhCamp’s 9th - Code Busters - edition and they
      sold-out the conference in a matter of hours (wow).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;I did not have the time to attend any talk. Unfortunately, due to my
      personal schedule, I arrived on Thursday night, and I was presenting on
      Friday after lunch. This was the second time I was giving this
      presentation, but I did lot’s of changes since the first time,
      including:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Big upgrades to my presentation look and feel &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Harry-Potterize my
      &lt;a href=&quot;https://github.com/karesti/harry-potter-vertx&quot;&gt;Vert.x Clustered
      Infinispan Embedded&lt;/a&gt;. An original demo containing more examples of
      Vert.x and Infinispan can be found
      &lt;a href=&quot;https://github.com/infinispan-demos/vertx-api&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Creating and live-coding an
      &lt;a href=&quot;https://github.com/infinispan-demos/harry-potter-quarkus&quot;&gt;Infinispan
      Client/Server + Quarkus Demo&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Using
      &lt;a href=&quot;https://blog.infinispan.org/2019/04/operator-021-out-with-dns-ping-and.html&quot;&gt;Infinispan
      Operator&lt;/a&gt; to create an Infinispan Cluster in
      &lt;a href=&quot;https://www.devoxx.fr/&quot;&gt;Openshift 4&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;table class=&quot;tableblock frame-all grid-all stretch&quot;&gt;
      &lt;colgroup&gt;
      &lt;col style=&quot;width: 100%;&quot; /&gt;
      &lt;/colgroup&gt;
      &lt;thead&gt;
      &lt;tr&gt;
      &lt;th class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-VB—​7t2qCfs/XLRiXygkwOI/AAAAAAAACiI/idqpzL07zNsD4_ozwPYvzfIKzM9Lv4jWQCLcBGAs/s1600/Katia_BreizhCamp.jpg&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-VB—​7t2qCfs/XLRiXygkwOI/AAAAAAAACiI/idqpzL07zNsD4_ozwPYvzfIKzM9Lv4jWQCLcBGAs/s400/Katia_BreizhCamp.jpg&quot; alt=&quot;image&quot; width=&quot;400&quot; height=&quot;301&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/th&gt;
      &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
      &lt;tr&gt;
      &lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Breizh Camp Code Busters Edition, Photo credit @BreizhCamp 2019&lt;/p&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On Friday morning I was stressed and I ran my presentation at the hotel.
      I arrived at the venue, delivered my talk and headed back to Paris. I
      deeply regretted not spending more time hanging out with other speakers
      and attendees, but I really couldn’t make it this time :(&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_greach_conf&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_greach_conf&quot;&gt;&lt;/a&gt;Greach Conf&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Greach Conf is a lovely conference held in Madrid (Spain) for several
      years now. A 100% international conference, it has been organized by the
      Groovy community. &lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This year they have changed the conference lineup adding an
      Android/Testing track and focusing on a bigger spectrum of technologies
      around the JVM.&lt;/p&gt;
      &lt;/div&gt;
      &lt;table class=&quot;tableblock frame-all grid-all stretch&quot;&gt;
      &lt;colgroup&gt;
      &lt;col style=&quot;width: 100%;&quot; /&gt;
      &lt;/colgroup&gt;
      &lt;thead&gt;
      &lt;tr&gt;
      &lt;th class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-4m4cQgITzVo/XLRd37LS7wI/AAAAAAAAChw/u1Locua7ykEBUMoP0EfQW8p2dN1VsxsiQCLcBGAs/s1600/Katia_Greach.jpg&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-4m4cQgITzVo/XLRd37LS7wI/AAAAAAAAChw/u1Locua7ykEBUMoP0EfQW8p2dN1VsxsiQCLcBGAs/s400/Katia_Greach.jpg&quot; alt=&quot;image&quot; width=&quot;400&quot; height=&quot;266&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/th&gt;
      &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
      &lt;tr&gt;
      &lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Greach Conf 2019. Photo credit José Miguel Rodríguez&lt;/p&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;I learned a bunch of new things, including content related to
      &lt;a href=&quot;https://sdkman.io/&quot;&gt;SDKMan!&lt;/a&gt;, &lt;a href=&quot;https://gradle.org/&quot;&gt;Gradle&lt;/a&gt;, the future of
      &lt;a href=&quot;https://grails.org/&quot;&gt;Grails&lt;/a&gt; and of course,
      &lt;a href=&quot;https://micronaut.io/&quot;&gt;Micronaut&lt;/a&gt;. As the principal maintainer of
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Spring-Boot and
      Infinispan integration&lt;/a&gt;, Micronaut felt new and familiar at the same
      time. I really enjoyed the workshop delivered by
      &lt;a href=&quot;https://twitter.com/alvaro_sanchez&quot;&gt;Alvaro Sánchez&lt;/a&gt; who will be in
      &lt;a href=&quot;https://www.devoxx.fr/&quot;&gt;Devoxx France&lt;/a&gt; this week. The framework &lt;strong&gt;is
      really impressive&lt;/strong&gt;. Give it a try!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;You will find on Twitter a complete thread about my Greach Conf
      impressions:&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;quoteblock&quot;&gt;
      &lt;blockquote&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Coming back to Paris after 3 amazing days in Madrid as speaker and
      attendee at
      &lt;a href=&quot;https://twitter.com/greachconf?ref_src=twsrc%5Etfw&quot;&gt;@greachconf&lt;/a&gt;
      &lt;a href=&quot;https://twitter.com/hashtag/greach?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#greach&lt;/a&gt;
      opening a thread 👇🏻&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;— Katia Aresti (@karesti)
      &lt;a href=&quot;https://twitter.com/karesti/status/1112041858270748672?ref_src=twsrc%5Etfw&quot;&gt;30
      mars 2019&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/blockquote&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_voxxed_days_milano&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_voxxed_days_milano&quot;&gt;&lt;/a&gt;Voxxed Days Milano&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Voxxed Days Milano (Italy) was organizing the first edition this year
      and I really loved this conference in every aspect of it! Thanks,
      &lt;a href=&quot;https://twitter.com/mariofusco&quot;&gt;Mario Fusco&lt;/a&gt; and all the team involved
      for making it possible!&lt;/p&gt;
      &lt;/div&gt;
      &lt;table class=&quot;tableblock frame-all grid-all stretch&quot;&gt;
      &lt;colgroup&gt;
      &lt;col style=&quot;width: 100%;&quot; /&gt;
      &lt;/colgroup&gt;
      &lt;thead&gt;
      &lt;tr&gt;
      &lt;th class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;a href=&quot;https://1.bp.blogspot.com/-e6wRSpBEK20/XLRgR20WmkI/AAAAAAAACh8/pREi8mad0ikM2KAjzYB57moGyjXXw3_mQCLcBGAs/s1600/Katia_VoxxedMilano.jpg&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://1.bp.blogspot.com/-e6wRSpBEK20/XLRgR20WmkI/AAAAAAAACh8/pREi8mad0ikM2KAjzYB57moGyjXXw3_mQCLcBGAs/s400/Katia_VoxxedMilano.jpg&quot; alt=&quot;image&quot; width=&quot;400&quot; height=&quot;194&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/th&gt;
      &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
      &lt;tr&gt;
      &lt;td class=&quot;tableblock halign-center valign-top&quot;&gt;&lt;p class=&quot;tableblock&quot;&gt;Voxxed Days Milano - Photo credit Sanne Grinovero &lt;/p&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;I’ve written a full thread on Twitter with my impressions. You can find
      it attached to the tweet where I share &lt;strong&gt;all the content I’ve used in
      Greach Conf, BreizhCamp and Voxxed Days Milano:&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;quoteblock&quot;&gt;
      &lt;blockquote&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;My presentation content
      &lt;a href=&quot;https://twitter.com/hashtag/VDM19?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#VDM19&lt;/a&gt;
      is available!
      &lt;a href=&quot;https://twitter.com/VoxxedMilano?ref_src=twsrc%5Etfw&quot;&gt;@VoxxedMilano&lt;/a&gt; !
      Thanks for attending!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The code of
      &lt;a href=&quot;https://twitter.com/vertx_project?ref_src=twsrc%5Etfw&quot;&gt;@vertx_project&lt;/a&gt;
      and &lt;a href=&quot;https://twitter.com/Infinispan?ref_src=twsrc%5Etfw&quot;&gt;@Infinispan&lt;/a&gt;
      embeddedhttps://t.co/KYNUJRzauU&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The code of
      &lt;a href=&quot;https://twitter.com/QuarkusIO?ref_src=twsrc%5Etfw&quot;&gt;@QuarkusIO&lt;/a&gt; and
      &lt;a href=&quot;https://twitter.com/Infinispan?ref_src=twsrc%5Etfw&quot;&gt;@Infinispan&lt;/a&gt;
      client/serverhttps://t.co/9TV9tPBaeI&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Deck: &lt;a href=&quot;https://t.co/HR8nMR7xlL&quot; class=&quot;bare&quot;&gt;https://t.co/HR8nMR7xlL&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;— Katia Aresti (@karesti)
      &lt;a href=&quot;https://twitter.com/karesti/status/1117012866354307072?ref_src=twsrc%5Etfw&quot;&gt;13
      avril 2019&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/blockquote&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Thanks to Breizh Camp, Greach Conf and Voxxed Days Milano for the
      opportunity to share around distributed caches and for the amazing time
      I’ve had during this month in each of the conferences.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This tour is now over for a while but will continue before summer. I
      will be presenting this talk (with upgrades, so stay tuned) in
      &lt;a href=&quot;https://devfest.gdglille.org/&quot;&gt;Dev Fest Lille in June 2019&lt;/a&gt; (France), in
      &lt;a href=&quot;https://comunidadcode.com/&quot;&gt;Comunidad CODE (Virtual talk)&lt;/a&gt; and
      &lt;a href=&quot;https://www.meetup.com/fr-FR/Software-Crafters-Bilbao/&quot;&gt;Software Crafters
      Bilbao&lt;/a&gt; in Spanish.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_devoxx_france&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_devoxx_france&quot;&gt;&lt;/a&gt;&lt;strong&gt;Devoxx France &lt;/strong&gt;&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.devoxx.fr/&quot;&gt;Devoxx France&lt;/a&gt; is taking place this week in
      Paris. &lt;strong&gt;I will be there,&lt;/strong&gt; so if you want to chat about Distributed
      caches, Datagrids, NoSQL Key-Value databases, or integration with your
      favorite framework &lt;strong&gt;feel free to reach me on twitter&lt;/strong&gt;!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;There are lot’s of &lt;strong&gt;new features and Reactive APIs to be done for
      Infinispan 10&lt;/strong&gt;, so my main focus will be there for a bit.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Stay Tuned And Happy Coding!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/04/08/operator-021-out-with-dns-ping-and/</id>
    <title>Operator 0.2.1 out with DNS ping and expanded customizations</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-04-08T01:00:00-07:00</published>
    <link href="//infinispan.org/blog/2019/04/08/operator-021-out-with-dns-ping-and/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" release"></category>
    <category term="openshift"></category>
    <category term="operator"></category>
    <category term="beta release"></category>
    <summary>
      We&#8217;ve just completed the release of the Infinispan Operator version
      0.2.1. In this second minor release, we&#8217;ve added the following
      features:
      
      
      
      
      DNS Cluster Discovery
      
      Cluster nodes now discover each other using DNS ping, which uses name
      lookups. Each node publishes a headless service which they use to locate
      each other. Previously, Kubernetes APIs were queried to discover other
      nodes, but this required administrator rights. DNS ping does not require
      admin permissions.
      
      
      
      Configurable Image
      
      The Infinispan server image used by the operator is now configurable,
      e.g.
      
      
      
      Configurable XML
      
      You can now provide their own custom Infinispan server XML referencing
      an existing ConfigMap:
      
      
      Note that this example requires a ConfigMap with the XML file to be
      created before hand.
      
      
      
      Next...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’ve just completed the release of the Infinispan Operator version
      0.2.1. In this second minor release, we’ve added the following
      features:&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_dns_cluster_discovery&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_dns_cluster_discovery&quot;&gt;&lt;/a&gt;DNS Cluster Discovery&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cluster nodes now discover each other using DNS ping, which uses name
      lookups. Each node publishes a headless service which they use to locate
      each other. Previously, Kubernetes APIs were queried to discover other
      nodes, but this required administrator rights. DNS ping does not require
      admin permissions.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_configurable_image&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_configurable_image&quot;&gt;&lt;/a&gt;Configurable Image&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan server image used by the operator is now configurable,
      e.g.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_configurable_xml&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_configurable_xml&quot;&gt;&lt;/a&gt;Configurable XML&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can now provide their own custom Infinispan server XML referencing
      an existing ConfigMap:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Note that this example requires a ConfigMap with the XML file to be
      created before hand.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_next_steps&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_next_steps&quot;&gt;&lt;/a&gt;Next Steps&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’re already working on version 0.3.0, and in parallel we’ve been
      working on our first OperatorHub submission. We hope to have some news
      for you very soon :)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/04/05/infinispan-spring-boot-starter-215final/</id>
    <title>Infinispan Spring Boot Starter 2.1.5.Final and 1.0.7.Final are out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-04-05T02:48:00-07:00</published>
    <link href="//infinispan.org/blog/2019/04/05/infinispan-spring-boot-starter-215final/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term="release"></category>
    <category term="spring boot"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just
      released Infinispan
      Spring Boot Starter 2.1.5.Final and 1.0.7.Final.
      
      
      
      
      2.1.5.Final
      
      *
      * 2.1.5.Final is using Infinispan 9.4.11.Final and Spring-Boot
      2.1.4.RELEASE.
      
      
      Important Spring-Boot bug fix
      
      Previous versions of Spring-Boot 2.1.x contained a bug related to the
      multi-release jars. Infinispan
      contains multi-release jars, in consequence, we could not run our
      applications using java -jar with Java 11 (Java 8 worked fine). For
      additional explanations, read
      here.
      Spring-Boot team has fixed
      this bug and
      released the correction in Spring-Boot 2.1.4.RELEASE, along with
      many
      other features and bug fixes, so consider upgrading soon.
      
      
      
      Statistics on Client/Server mode and Actuator
      
      Statistics configuration in client/server mode for the client evolved in
      the latest Infinispan versions. As a remainder, to activate actuator
      statistics in client/server mode :
      "Configure 'infinispan.remote.statistics=true' in the",
      application.properties
      or
      - Configure ''infinispan.client.hotrod.statistics=true" in the
      hotrod-client.properties
      or
      -...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just
      released &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan
      Spring Boot Starter&lt;/a&gt; &lt;strong&gt;2.1.5.Final &lt;/strong&gt;and &lt;strong&gt;1.0.7.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_2_1_5_final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_2_1_5_final&quot;&gt;&lt;/a&gt;&lt;strong&gt;2.1.5.Final&lt;/strong&gt;&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;*
      * &lt;strong&gt;2.1.5.Final&lt;/strong&gt; is using&lt;strong&gt; Infinispan 9.4.11.Final&lt;/strong&gt; and &lt;strong&gt;Spring-Boot
      2.1.4.RELEASE&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;_important_spring_boot_bug_fix&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_important_spring_boot_bug_fix&quot;&gt;&lt;/a&gt;&lt;strong&gt;Important Spring-Boot bug fix&lt;/strong&gt;&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Previous versions of Spring-Boot 2.1.x contained a bug related to the
      &lt;a href=&quot;https://openjdk.java.net/jeps/238&quot;&gt;multi-release jars&lt;/a&gt;. Infinispan
      contains multi-release jars, in consequence, we could not run our
      applications using java -jar with Java 11 (Java 8 worked fine). For
      additional explanations, read
      &lt;a href=&quot;https://stackoverflow.com/questions/54635814/why-does-infinispan-fail-with-noclassdeffounderror-on-spring-boot-java-11&quot;&gt;here&lt;/a&gt;.
      Spring-Boot team has fixed
      this &lt;a href=&quot;https://github.com/spring-projects/spring-boot/issues/15981&quot;&gt;bug&lt;/a&gt; and
      released the correction in Spring-Boot 2.1.4.RELEASE, along with
      &lt;a href=&quot;https://github.com/spring-projects/spring-boot/releases/tag/v2.1.4.RELEASE&quot;&gt;many
      other features and bug fixes&lt;/a&gt;, so consider upgrading soon.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;_statistics_on_clientserver_mode_and_actuator&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_statistics_on_clientserver_mode_and_actuator&quot;&gt;&lt;/a&gt;&lt;strong&gt;Statistics on Client/Server mode and Actuator&lt;/strong&gt;&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Statistics configuration in client/server mode for the client evolved in
      the latest Infinispan versions. As a remainder, to activate actuator
      statistics in client/server mode :
      &quot;Configure 'infinispan.remote.statistics=true' in the&quot;,
      &lt;strong&gt;application.properties&lt;/strong&gt;
      &lt;span class=&quot;underline&quot;&gt;or&lt;/span&gt;
      - Configure ''infinispan.client.hotrod.statistics=true&quot; in the
      &lt;strong&gt;hotrod-client.properties&lt;/strong&gt;
      &lt;span class=&quot;underline&quot;&gt;or&lt;/span&gt;
      - Configure by code, for example:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;@Bean
      public InfinispanRemoteConfigurer infinispanRemoteConfigurer() \{
          return () → new
      ConfigurationBuilder().statistics().enable().build();
      }&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;exampleblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;===== JMX&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you want to use Infinispan and JMX, for example on Client/Server
      mode, set the 'jmx' property 'true' as explained above with the
      'statistics' property. However, you might get
      a javax.management.InstanceAlreadyExistsException because both
      Infinispan and Spring will try to register the MXBean.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The correction will land on the next starter release. If you need to
      avoid this error today, you can tell Spring-Boot not to register the
      bean with the following code (Thanks Stéphane Nicoll for the tip!):&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;_testcontainers&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_testcontainers&quot;&gt;&lt;/a&gt;Testcontainers&lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This version includes an integration test using
      &lt;a href=&quot;https://testcontainers.org/&quot;&gt;Testcontainers&lt;/a&gt;,
      &lt;a href=&quot;https://junit.org/junit5/&quot;&gt;JUnit5&lt;/a&gt; and the
      &lt;a href=&quot;https://hub.docker.com/r/jboss/infinispan-server&quot;&gt;Infinispan Server&lt;/a&gt;.
      Grab a look
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot/blob/90e79a81dd32a6c9462e76bfdfb175e2c751b3f0/infinispan-spring-boot-starter-remote/src/test/java/test/org/infinispan/spring/starter/remote/actuator/RemoteCacheMetricBinderTest.java&quot;&gt;here&lt;/a&gt; if
      you are curious.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_1_0_7_final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_1_0_7_final&quot;&gt;&lt;/a&gt;&lt;strong&gt;1.0.7.Final&lt;/strong&gt;&lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;*
      * &lt;strong&gt;1.0.7.Final&lt;/strong&gt; upgrades to &lt;strong&gt;1.5.19.RELEASE&lt;/strong&gt; and Infinispan
      &lt;strong&gt;9.4.11.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;⭐ Don’t forget to &lt;strong&gt;star&lt;/strong&gt; the project in
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;GitHub&lt;/a&gt; if you like
      the starter! ⭐&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find these releases in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/03/07/subatomic-infinspan-client/</id>
    <title>Subatomic Infinispan Client</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-03-07T06:08:00-08:00</published>
    <link href="//infinispan.org/blog/2019/03/07/subatomic-infinspan-client/" rel="alternate" type="text/html" />
    <author>
      <name>Unknown</name>
    </author>
    <category term="quarkus"></category>
    <category term="graalvm"></category>
    <category term="native"></category>
    <category term="substratevm"></category>
    <summary>
      Today, the Quarkus project was released as a public beta.
      https://quarkus.io/ For those of you not familiar, Quarkus allows you to
      write your enterprise apps as you have done in the past with
      Hibernate/JAX-RS, but also to compile these applications to a Graal-VM
      native image. Running in a native image allows for the application to be
      started up in mere milliseconds, depending upon the app, all while using
      much less memory.
      
      
      The Infinispan team is proud to announce that you can use the HotRod
      Java client in Quarkus and supports being compiled to a native image as
      well. This can allow you to startup and connect to a remote...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Today, the Quarkus project was released as a public beta.
      &lt;a href=&quot;https://quarkus.io/&quot; class=&quot;bare&quot;&gt;https://quarkus.io/&lt;/a&gt; For those of you not familiar, Quarkus allows you to
      write your enterprise apps as you have done in the past with
      Hibernate/JAX-RS, but also to compile these applications to a Graal-VM
      native image. Running in a native image allows for the application to be
      started up in mere milliseconds, depending upon the app, all while using
      much less memory.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan team is proud to announce that you can use the HotRod
      Java client in Quarkus and supports being compiled to a native image as
      well. This can allow you to startup and connect to a remote Infinispan
      server faster than ever before.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you want a quick and simple example of how you can get this working
      you can take a look at the quick start which can be found at
      &lt;a href=&quot;https://github.com/quarkusio/quarkus-quickstarts/tree/master/infinispan-client&quot; class=&quot;bare&quot;&gt;https://github.com/quarkusio/quarkus-quickstarts/tree/master/infinispan-client&lt;/a&gt;.
      This example covers configuring the client connection, cache injection
      and simple get/put operations as a basis.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Client Quarkus extension in addition to providing an easy
      way to create a Graal-VM native image with Infinispan Client also
      provides the following features to help the user get stuff done
      quicker.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Automatically Inject Important Resources&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;olist arabic&quot;&gt;
      &lt;ol class=&quot;arabic&quot;&gt;
      &lt;li&gt;
      &lt;p&gt;RemoteCache (named)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;RemoteCacheManger&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;CounterManager&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ol&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;User based ProtoStream Marshalling&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Querying (Indexed / Non Indexed)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Continuous Query&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Near Cache&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Authentication/Authorization&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Encryption&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Counters&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;More details for these features as well as how to configure them can be
      found at &lt;a href=&quot;https://quarkus.io/guides/infinispan-client-guide&quot; class=&quot;bare&quot;&gt;https://quarkus.io/guides/infinispan-client-guide&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please let us know of any questions, concerns or suggestions at the
      usual places: &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt;
      or &lt;a href=&quot;http://infinispan.zulipchat.com/&quot;&gt;chat&lt;/a&gt;. We expect to continue
      enhancing this extension and would love to have any feedback.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/03/06/triple-cachestore-release-cloud-mongodb/</id>
    <title>Triple cachestore release: Cloud, MongoDB and Cassandra</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-03-06T07:07:00-08:00</published>
    <link href="//infinispan.org/blog/2019/03/06/triple-cachestore-release-cloud-mongodb/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term=" release"></category>
    <category term="cache store"></category>
    <summary>
      Today we present to you a trifecta of cache store releases which align
      to Infinispan 9.x
      
      
      
      
      Cassandra Cache Store
      
      
      The Cassandra cache store now implements the
      publishEntries/publishKeys
      methods.
      
      
      
      
      Cloud Cache Store
      
      
      The Cloud cache store uses the Apache jclouds library to store data on
      cloud storage providers such as Amazon’s S3, Rackspace’s Cloudfiles or
      any other such provider supported by JClouds.
      The store has been updated to Infinispan 9.x&#8217;s persistence SPI and uses
      jclouds 2.1.x
      
      
      
      
      MongoDB Cache Store
      
      
      This cache store has also been updated to the Infinispan 9.x persistence
      SPI.
      
      
      You can get documentation and maven coordinates from our
      Cache Store page...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Today we present to you a trifecta of cache store releases which align
      to Infinispan 9.x&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_cassandra_cache_store&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_cassandra_cache_store&quot;&gt;&lt;/a&gt;Cassandra Cache Store&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Cassandra cache store now implements the
      &lt;a href=&quot;https://docs.jboss.org/infinispan/9.4/apidocs/org/infinispan/persistence/spi/AdvancedCacheLoader.html#publishEntries(java.util.function.Predicate,boolean,boolean)&quot;&gt;publishEntries/publishKeys&lt;/a&gt;
      methods.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_cloud_cache_store&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_cloud_cache_store&quot;&gt;&lt;/a&gt;Cloud Cache Store&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Cloud cache store uses the Apache jclouds library to store data on
      cloud storage providers such as Amazon’s S3, Rackspace’s Cloudfiles or
      any other such provider supported by JClouds.
      The store has been updated to Infinispan 9.x’s persistence SPI and uses
      jclouds 2.1.x&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_mongodb_cache_store&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_mongodb_cache_store&quot;&gt;&lt;/a&gt;MongoDB Cache Store&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This cache store has also been updated to the Infinispan 9.x persistence
      SPI.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can get documentation and maven coordinates from our
      &lt;a href=&quot;http://infinispan.org/cache-store-implementations/&quot;&gt;Cache Store page&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/03/05/enhanced-jgroups-configuration/</id>
    <title>Enhanced JGroups configuration</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-03-05T05:27:00-08:00</published>
    <link href="//infinispan.org/blog/2019/03/05/enhanced-jgroups-configuration/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term=" configuration"></category>
    <category term="jgroups"></category>
    <summary>
      Infinispan uses JGroups as its underlying
      clustering layer. In order to configure the finer details of clustering
      (discovery, flow control, cross-site, etc) you have to provide a
      separate XML file with the desired configuration and reference it from
      your Infinispan XML file as follows:
      
      
      For simple configurations this is usually fine, but configuring complex
      setups, such as cross-site replication, means juggling multiple files
      (one for the local stack, one for the cross-site stack and one for the
      relay configuration).
      
      
      Starting with Infinispan 10 Alpha2 we have introduced a number of
      changes to make your life with JGroups configurations a lot easier.
      
      
      
      
      Default stacks
      
      
      Infinispan now comes with two pre-declared stacks: tcp and...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan uses &lt;a href=&quot;http://www.jgroups.org/&quot;&gt;JGroups&lt;/a&gt; as its underlying
      clustering layer. In order to configure the finer details of clustering
      (discovery, flow control, cross-site, etc) you have to provide a
      separate XML file with the desired configuration and reference it from
      your Infinispan XML file as follows:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For simple configurations this is usually fine, but configuring complex
      setups, such as cross-site replication, means juggling multiple files
      (one for the local stack, one for the cross-site stack and one for the
      relay configuration).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting with Infinispan 10 Alpha2 we have introduced a number of
      changes to make your life with JGroups configurations a lot easier.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_default_stacks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_default_stacks&quot;&gt;&lt;/a&gt;Default stacks&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan now comes with two pre-declared stacks: &lt;code&gt;tcp&lt;/code&gt; and &lt;code&gt;udp&lt;/code&gt;.
      Using them is as simple as just referencing their names in the
      &lt;code&gt;&amp;lt;transport&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_inline_stacks&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_inline_stacks&quot;&gt;&lt;/a&gt;Inline stacks&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Inlining a stack means you can put the JGroups configuration inside the
      Infinispan one as follows:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can use the full JGroups schema, and by using XML namespaces you get
      full validation.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_stack_inheritance&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_stack_inheritance&quot;&gt;&lt;/a&gt;Stack inheritance&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Most of the time you want to reuse one of the pre-declared stacks but
      just override some of the parameters (e.g. discovery) to suit your
      environment. The following example creates a new &lt;code&gt;tcpgossip&lt;/code&gt; stack which
      is based on the default tcp stack but replaces the discovery protocol
      with &lt;code&gt;TCPGOSSIP&lt;/code&gt;:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;In the above example you can see that we have enhanced the JGroups
      protocol declarations with two new attributes: &lt;code&gt;ispn:stack.combine&lt;/code&gt; and
      &lt;code&gt;ispn:stack.position&lt;/code&gt; which affect how and where protocol changes are
      applied on the parent configuration to obtain a new configuration.
      &lt;code&gt;stack.combine&lt;/code&gt; can be one of &lt;code&gt;COMBINE&lt;/code&gt; (the default, possibly
      overriding any specified attributes), &lt;code&gt;REPLACE&lt;/code&gt; (which completely
      replaces the protocol and resets all attributes), &lt;code&gt;REMOVE&lt;/code&gt; (removes the
      protocol) and &lt;code&gt;INSERT_AFTER&lt;/code&gt; (which places this protocol in the stack
      immediately after the protocol specified by &lt;code&gt;stack.position&lt;/code&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_multiple_stacks_and_cross_site&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_multiple_stacks_and_cross_site&quot;&gt;&lt;/a&gt;Multiple stacks and Cross-site&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The inline configuration really shows its usefulness in cross-site
      configurations. In fact, the JGroups stack declaration has been extended
      with a special element which replaces the need for a separate relay XML
      file and can reference other stacks just by name. The following
      configuration uses the default &lt;code&gt;udp&lt;/code&gt; stack for the local cluster
      transport and uses the default &lt;code&gt;tcp&lt;/code&gt; stack for connecting to a remote
      site:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Having the entire configuration in a single place greatly simplifies
      management. Of course you can combine all of the above features to
      obtain the configuration you need for your environment. You can find
      more details and examples in the
      &lt;a href=&quot;http://infinispan.org/docs/dev/user_guide/user_guide.html#cache_configuration_clustered&quot;&gt;documentation&lt;/a&gt;.
      Enjoy !
      Tristan&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/03/04/first-openshfit-operator-pre-release/</id>
    <title>First OpenShift Operator pre-release for Infinispan is here!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-03-04T01:14:00-08:00</published>
    <link href="//infinispan.org/blog/2019/03/04/first-openshfit-operator-pre-release/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" release"></category>
    <category term="openshift"></category>
    <category term="operator"></category>
    <category term="beta"></category>
    <summary>
      Infinispan Operator
      is a new method of packaging, deploying and managing Infinispan clusters
      on OpenShift. You can think of the Infinispan Operator as the runtime
      that manages Infinispan clusters on OpenShift.
      
      
      We&#8217;ve just done our first Infinispan Operator pre-release, version
      0.1.0, which allows you to easily boot up an Infinispan cluster on
      OpenShift.
      
      
      Using the operator is as simple as installing the Infinispan Operator
      (requires admin access) on OpenShift, and then create a YAML descriptor
      that defines the Infinispan cluster. The example below shows how to
      create a 3-node Infinispan cluster:
      
      
      And then call:
      
      
      $ oc apply -f example-infinispan.yaml
      
      
      A more detailed tutorial on using the Infinispan Operator can be found
      here.
      We highly recommend...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://hub.docker.com/r/jboss/infinispan-operator&quot;&gt;Infinispan Operator&lt;/a&gt;
      is a new method of packaging, deploying and managing Infinispan clusters
      on OpenShift. You can think of the Infinispan Operator as the runtime
      that manages Infinispan clusters on OpenShift.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’ve just done our first Infinispan Operator pre-release, version
      0.1.0, which allows you to easily boot up an Infinispan cluster on
      OpenShift.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Using the operator is as simple as installing the Infinispan Operator
      (requires admin access) on OpenShift, and then create a YAML descriptor
      that defines the Infinispan cluster. The example below shows how to
      create a 3-node Infinispan cluster:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;And then call:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;$ oc apply -f example-infinispan.yaml&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A more detailed tutorial on using the Infinispan Operator can be found
      &lt;a href=&quot;https://github.com/infinispan/infinispan-simple-tutorials/tree/master/operator&quot;&gt;here&lt;/a&gt;.
      We highly recommend you give it a go and let us know what you think.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Over the next few versions we’ll be adding more features that make the
      most of the capabilities the
      &lt;a href=&quot;https://coreos.com/blog/introducing-operator-framework&quot;&gt;Operator
      framework&lt;/a&gt; offers to automatically manage the health and status of
      running Infinispan clusters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please also note that as we work towards the 1.0 release, some things
      might change :)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/02/22/infinispan-spring-boot-starter-214final/</id>
    <title>Infinispan Spring Boot Starter 2.1.4.Final is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-02-22T04:06:00-08:00</published>
    <link href="//infinispan.org/blog/2019/02/22/infinispan-spring-boot-starter-214final/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term="release"></category>
    <category term="spring boot"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just
      released Infinispan
      Spring Boot 2.1.4.Final.
      
      
      2.1.4.Final is using the last Infinispan Release 9.4.8.Final and
      Spring-Boot 2.1.3.RELEASE.
      
      
      You can find this release in the maven central repository.
      
      
      Please report any issues in
      our issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just
      released &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan
      Spring Boot&lt;/a&gt; &lt;strong&gt;2.1.4.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;2.1.4.Final&lt;/strong&gt; is using &lt;strong&gt;the last Infinispan Release 9.4.8.Final&lt;/strong&gt; and
      &lt;strong&gt;Spring-Boot 2.1.3.RELEASE&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find this release in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/02/21/infinispan-1000beta2-and-948/</id>
    <title>Infinispan 10.0.0.Beta2 and 9.4.8</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-02-21T08:31:00-08:00</published>
    <link href="//infinispan.org/blog/2019/02/21/infinispan-1000beta2-and-948/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term=" beta"></category>
    <category term="release"></category>
    <category term="final"></category>
    <summary>
      Hello Infinispan users,
      
      
      What ? You&#8217;re wondering where Beta1 is ? And what happened to 9.4.7 ?
      Unfortunately, those releases, while tagged and available on your
      closest Maven Central mirror will only work with Java 11, so we had to
      rebuild and re-release.
      
      
      So, without further ado, I give you 10.0.0.Beta2 and 9.4.8.Final.
      
      
      The first change I should outline is one that will impact you if you are
      building Infinispan from source. The previous build structure required
      having both JDK 8 and JDK 11 in order to compile a release which worked
      on both. In order to simplify the build process, as well as ensuring
      that the output is always...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Hello Infinispan users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;What ? You’re wondering where Beta1 is ? And what happened to 9.4.7 ?
      Unfortunately, those releases, while tagged and available on your
      closest Maven Central mirror will only work with Java 11, so we had to
      rebuild and re-release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So, without further ado, I give you 10.0.0.Beta2 and 9.4.8.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The first change I should outline is one that will impact you if you are
      building Infinispan from source. The previous build structure required
      having both JDK 8 and JDK 11 in order to compile a release which worked
      on both. In order to simplify the build process, as well as ensuring
      that the output is always consistent we now require Java 11 only. Don’t
      worry: the resulting binaries will still work on Java 8 and greater.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_10_0_0_beta2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_10_0_0_beta2&quot;&gt;&lt;/a&gt;10.0.0.Beta2&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The first beta of our next major release contains a number of
      enhancements:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;[&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9847&quot;&gt;ISPN-9847&lt;/a&gt;] - Extend
      configuration to allow inline JGroups configuration and inheritance
      [&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9699&quot;&gt;ISPN-9699&lt;/a&gt;] - Cluster member
      owning no data
      [&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-8124&quot;&gt;ISPN-8124&lt;/a&gt;] - ServerNG:
      Initial implementation&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We will soon be posting about these features individually.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The work on persistent storage long-term compatibility is progressing
      with
      [&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9845&quot;&gt;ISPN-9845&lt;/a&gt;] - Stop exposing
      InternalMetadata via the persistence SPI&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Notable fixes:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;[&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-4075&quot;&gt;ISPN-4075&lt;/a&gt;] - State transfer
      should preserve the creation timestamp of entries&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;And if you were still using the old Distributed Executor, that has been
      finally removed in
      [&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9784&quot;&gt;ISPN-9784&lt;/a&gt;] - Remove
      Distributed Executor&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_9_4_8_final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_9_4_8_final&quot;&gt;&lt;/a&gt;9.4.8.Final&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Our latest point release contains lots of bug fixes and minor
      enhancements.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As usual you can ask questions on the
      &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt;,
      &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;
      and interactively on our &lt;a href=&quot;http://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt;.
      Please report any bugs you find on our
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN/summary&quot;&gt;Issue Tracker&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/01/31/infinispan-spring-boot-starter-213final/</id>
    <title>Infinispan Spring Boot Starter 2.1.3.Final is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-01-31T08:55:00-08:00</published>
    <link href="//infinispan.org/blog/2019/01/31/infinispan-spring-boot-starter-213final/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term=" release"></category>
    <category term="spring boot"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just
      released Infinispan
      Spring Boot 2.1.3.Final.
      
      
      2.1.3.Final is using the last Infinispan Release 9.4.6.Final and
      contains some bug fixes related to Actuator integration.
      
      
      You can find this release in the maven central repository.
      
      
      Please report any issues in
      our issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just
      released &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan
      Spring Boot&lt;/a&gt; &lt;strong&gt;2.1.3.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;2.1.3.Final&lt;/strong&gt; is using &lt;strong&gt;the last Infinispan Release 9.4.6.Final&lt;/strong&gt; and
      contains some bug fixes related to Actuator integration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find this release in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/01/28/1000alpha3-and-946final/</id>
    <title>10.0.0.Alpha3 and 9.4.6.Final</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-01-28T01:35:00-08:00</published>
    <link href="//infinispan.org/blog/2019/01/28/1000alpha3-and-946final/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term=" release"></category>
    <category term="alpha"></category>
    <summary>
      Hey there,
      
      
      the Infinispan team has cooked two releases for you today:
      
      
      
      
      10.0.0.Alpha3
      
      
      This release contains 3 features:
      
      
      
      
      [ISPN-4075] - State transfer should preserve the creation timestamp of
      entries
      
      
      [ISPN-9320] - Automatic hot rod client version selection
      
      
      [ISPN-9625] - Make clustered locks configuration possible by XML
      
      
      [ISPN-9771] - Support for configuration in JSON format
      
      
      
      
      We&#8217;ve also started removing code which was deprecated in the past, so
      check the
      upgrading
      document to see what you need to adapt in your application. This
      document will receive further changes during the 10.0 cycle.
      
      
      The
      complete list of issues resolved in 10.0.0.Alpha3.
      
      
      Some other features are in the works and should be landing during the
      beta period. Check the
      first
      of the alpha...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Hey there,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;the Infinispan team has cooked two releases for you today:&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_10_0_0_alpha3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_10_0_0_alpha3&quot;&gt;&lt;/a&gt;10.0.0.Alpha3&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This release contains 3 features:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-4075] - State transfer should preserve the creation timestamp of
      entries&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-9320] - Automatic hot rod client version selection&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-9625] - Make clustered locks configuration possible by XML&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-9771] - Support for configuration in JSON format&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’ve also started removing code which was deprecated in the past, so
      check the
      &lt;a href=&quot;http://infinispan.org/docs/dev/upgrading/upgrading.html&quot;&gt;upgrading
      document&lt;/a&gt; to see what you need to adapt in your application. This
      document will receive further changes during the 10.0 cycle.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12339174&quot;&gt;The
      complete list of issues resolved in 10.0.0.Alpha3.&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Some other features are in the works and should be landing during the
      beta period. Check the
      &lt;a href=&quot;https://blog.infinispan.org/2018/11/the-road-to-infinispan-10-alpha1.html&quot;&gt;first
      of the alpha posts&lt;/a&gt; to learn more about the new stuff.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_9_4_6_final&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_9_4_6_final&quot;&gt;&lt;/a&gt;9.4.6.Final&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The stabilization of 9.4 continues with this micro release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Highlights are:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-7889] - BaseDistributionInterceptor.remoteGet may cause
      concurrency issues
      [ISPN-8889] - Data race in NonTxInvocationContext&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-9873] - Remove listeners when the lock is removed&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-9822] - BasicComponentRegistryImpl fails with security manager&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;[ISPN-9819] - Improve Spring-Session events handling in remote and
      embedded&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12340282&quot;&gt;The
      complete list of issues resolved in 9.4.6.Final.&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in our
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2019/01/15/infinispan-spring-boot-starter-212final/</id>
    <title>Infinispan Spring Boot Starter 2.1.2.Final is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2019-01-15T01:52:00-08:00</published>
    <link href="//infinispan.org/blog/2019/01/15/infinispan-spring-boot-starter-212final/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term=" release"></category>
    <category term="spring"></category>
    <category term="spring boot"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just released
      Infinispan Spring
      Boot 2.1.2.Final.
      
      
      2.1.2.Final is using Spring Boot 2.1.2.RELEASE and contains some bug
      fixes related to JCache and Actuator integration.
      
      
      The starter is now using Infinispan&#8217;s last stable release:
      9.4.5.Final.
      
      
      You can find this release in the maven central repository.
      
      
      Please report any issues in
      our issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan Spring
      Boot&lt;/a&gt; &lt;strong&gt;2.1.2.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;2.1.2.Final&lt;/strong&gt; is using &lt;strong&gt;Spring Boot 2.1.2.RELEASE&lt;/strong&gt; and contains some bug
      fixes related to JCache and Actuator integration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The starter is now using Infinispan’s last stable release:
      &lt;strong&gt;9.4.5.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find this release in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/12/11/infinispan-spring-boot-211final-and/</id>
    <title>Infinispan Spring Boot Starter 2.1.1.Final and 1.0.4.Final are out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-12-11T04:43:00-08:00</published>
    <link href="//infinispan.org/blog/2018/12/11/infinispan-spring-boot-211final-and/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term=" release"></category>
    <category term="spring-session"></category>
    <category term="spring"></category>
    <category term="spring boot"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just released
      Infinispan Spring
      Boot 2.1.1.Final and 1.0.4.Final.
      
      
      1.0.4.Final is using Spring Boot 1.5.17.RELEASE
      
      
      2.1.1.Final is using Spring Boot 2.1.1.RELEASE 
      
      
      Both starters are now using
      Infinispan&#8217;s last
      stable release: 9.4.4.Final.
      
      
      9.4.4.Final provides full support to JDK 11, Spring 4
      and 5.
      Concerning Spring 5, it includes
      Spring Session 2.1.2.RELEASE
      support.
      
      
      You can find these releases in the maven central repository.
      
      
      Please report any issues in
      our issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan Spring
      Boot&lt;/a&gt; &lt;strong&gt;2.1.1.Final&lt;/strong&gt; and &lt;strong&gt;1.0.4.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;1.0.4.Final&lt;/strong&gt; is using &lt;strong&gt;Spring Boot 1.5.17.RELEASE&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;2.1.1.Final&lt;/strong&gt; is using &lt;strong&gt;Spring Boot 2.1.1.RELEASE&lt;/strong&gt; &lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Both starters are now using
      Infinispan’s &lt;a href=&quot;https://blog.infinispan.org/2018/12/infinispan-944final-and-1000alpha2-out.html&quot;&gt;last
      stable release: 9.4.4.Final&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;9.4.4.Final provides full support to &lt;strong&gt;JDK 11,&lt;/strong&gt; Spring 4
      &lt;strong&gt;&lt;span class=&quot;underline&quot;&gt;and&lt;/span&gt;&lt;/strong&gt; 5.
      Concerning Spring 5, it includes
      &lt;a href=&quot;https://spring.io/projects/spring-session&quot;&gt;Spring Session 2.1.2.RELEASE&lt;/a&gt;
      support.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find these releases in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/12/10/infinispan-944final-and-1000alpha2-out/</id>
    <title>Infinispan 9.4.4.Final and 10.0.0.Alpha2 out with Spring 5 support!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-12-10T00:05:00-08:00</published>
    <link href="//infinispan.org/blog/2018/12/10/infinispan-944final-and-1000alpha2-out/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" release"></category>
    <category term="alpha"></category>
    <summary>
      We&#8217;ve just released completed a couple of releases:
      
      
      Infinispan 9.4.4.Final
      (release
      notes)
      
      
      
      
      Adds Spring 5 and Spring Boot 2.1 support
      
      
      Fixes for JDK 11 compatibility. 
      
      
      Improves Cache#size() performance when using shared cache stores.
      
      
      
      
      Infinispan 10.0.0.Alpha2
      (release
      notes) contains same fixes as 9.4.4.Final plus
      
      
      
      
      Removes the CLI cache loader
      
      
      RemoteCache#getBulk methods.
      
      
      
      
      Don&#8217;t forget to checkout the Infinispan 10 road map
      blog
      post to find out all that&#8217;s coming.
      
      
      Please report any issues in our
      issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Cheers,
      
      
      Galder...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’ve just released completed a couple of releases:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 9.4.4.Final
      (&lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12340019&quot;&gt;release
      notes&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Adds Spring 5 and Spring Boot 2.1 support&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Fixes for JDK 11 compatibility. &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Improves Cache#size() performance when using shared cache stores.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 10.0.0.Alpha2
      (&lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12339364&quot;&gt;release
      notes&lt;/a&gt;) contains same fixes as 9.4.4.Final plus&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Removes the CLI cache loader&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;RemoteCache#getBulk methods.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Don’t forget to checkout the Infinispan 10 road map
      &lt;a href=&quot;https://blog.infinispan.org/2018/11/the-road-to-infinispan-10-alpha1.html&quot;&gt;blog
      post&lt;/a&gt; to find out all that’s coming.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in our
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/21/the-road-to-infinispan-10-alpha1/</id>
    <title>The road to Infinispan 10 (Alpha1)</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-21T00:57:00-08:00</published>
    <link href="//infinispan.org/blog/2018/11/21/the-road-to-infinispan-10-alpha1/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term=" release"></category>
    <category term="final"></category>
    <category term="alpha"></category>
    <category term="roadmap"></category>
    <summary>
      Dear all,
      
      
      Today we are releasing 10.0.0.Alpha1 and 9.4.2.Final.
      
      
      Infinispan 9.4.2.Final comes with a number of bug fixes and some small
      additional features:
      
      
      
      
      ISPN-9655 REST Access Log
      headers
      
      
      ISPN-8144 &amp;
      ISPN-9661 Cross-Site
      replication statistics
      
      
      ISPN-9708 Expose the
      executor services through JMX
      
      
      ISPN-9732 Local iteration
      optimization with write behind is valid for non shared stores
      
      
      ISPN-9717 Fix Integer
      overflow for lifespan and maxIdle
      
      
      
      
      We have begun working on what will become Infinispan 10. As with all new
      major releases, this will come with a number of important changes.
      
      
      
      
      New Server
      We are working on a new lightweight server, currently dubbed ServerNG,
      which will supersede the current WildFly-based offering. The new server
      will have a smaller disk and memory footprint, a new...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear all,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Today we are releasing 10.0.0.Alpha1 and 9.4.2.Final.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 9.4.2.Final comes with a number of bug fixes and some small
      additional features:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9655&quot;&gt;ISPN-9655&lt;/a&gt; REST Access Log
      headers&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-8144&quot;&gt;ISPN-8144&lt;/a&gt; &amp;amp;
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9661&quot;&gt;ISPN-9661&lt;/a&gt; Cross-Site
      replication statistics&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9708&quot;&gt;ISPN-9708&lt;/a&gt; Expose the
      executor services through JMX&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9732&quot;&gt;ISPN-9732&lt;/a&gt; Local iteration
      optimization with write behind is valid for non shared stores&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9717&quot;&gt;ISPN-9717&lt;/a&gt; Fix Integer
      overflow for lifespan and maxIdle&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have begun working on what will become Infinispan 10. As with all new
      major releases, this will come with a number of important changes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;New Server&lt;/strong&gt;
      We are working on a new lightweight server, currently dubbed &lt;em&gt;ServerNG&lt;/em&gt;,
      which will supersede the current WildFly-based offering. The new server
      will have a smaller disk and memory footprint, a new RESTful admin
      interface, improved security. It will still use familiar components
      (Elytron for security, Narayana for transactions, etc) but we hope that
      the installation and usability experience will be most improved. A
      dedicated blog post will describe in detail what is coming.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Long-term Storage Format&lt;/strong&gt;
      The persistent storage format will be changed so that it will be easier
      to transparently make changes to it without requiring further
      exporters/importers.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Non-blocking listeners&lt;/strong&gt;
      The listener implementation will be replaced with a non-blocking
      implementation.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Asynchronous CacheLoader/Store&lt;/strong&gt;
      Store operations will be ran in another thread to provide non blocking
      for main threads&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Improved statistics&lt;/strong&gt;
      Infinispan statistics have been traditionally over-simplistic, offering
      mostly basic averages for writes and reads. We are going to implement
      percentiles on a histogram as well as recording tracing information so
      that you will be able to know how much time is being spent in the
      various subsystems (clustering, persistence, etc.)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;New API&lt;/strong&gt;
      The current Infinispan API, based around Java’s &lt;em&gt;ConcurrentHashMap&lt;/em&gt;
      design, does not offer the flexibility required to support modern
      reactive designs as well as the various extensions we’ve added over the
      years (counters, multimaps, etc). We are therefore working on a new
      modern API design which we will be describing with a number of blog
      posts in the near future.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Agroal JDBC Connection Pool&lt;/strong&gt;
      We are replacing the JDBC connection pool implementation with
      &lt;a href=&quot;https://agroal.github.io/&quot;&gt;Agroal&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Kubernetes Operators&lt;/strong&gt;
      Operators are all the rage in the Kubernetes world, and we are working
      on an Infinispan Operator which will take care of managing and
      monitoring the health of an Infinispan cluster, handle scale up/scale
      down safely, perform upgrades and more.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 10.0.0.Alpha1 is the first release from our development
      branch. It currently includes the following features on top of what is
      in 9.4.2.Final:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9666&quot;&gt;ISPN-9666&lt;/a&gt; Agroal JDBC
      Connection pool&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9688&quot;&gt;ISPN-9688&lt;/a&gt; Internal REST
      server modularization&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in our
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/19/quick-start-infinispan-on-kubernetes/</id>
    <title>Quick start Infinispan on Kubernetes</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-19T04:14:00-08:00</published>
    <link href="//infinispan.org/blog/2018/11/19/quick-start-infinispan-on-kubernetes/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" kubernetes"></category>
    <category term="minikube"></category>
    <summary>
      Last week we showed you
      how
      to easily run Infinispan on top of OpenShift. This week we&#8217;re trying to
      do the same on Minikube, a tool that makes it easy to run vanilla
      Kubernetes locally.
      
      
      Although we&#8217;ve already covered the topic in the
      past,
      we felt the descriptors needed a permanent location and an update to the
      latest Infinispan releases. Detailed instructions can be found in
      this
      repository.
      
      
      With OpenShift, we took advantage of
      Templates
      which allow a set of objects to be parameterised.
      Templates are OpenShift specific, so Kubernetes does not understand
      them. Instead, we provide you with the individual descriptors required
      to run Infinispan (Helm chart to come&#8230;&#8203;). This includes:
      
      
      
      
      A
      stateful
      set
      
      
      Two services, for
      Hot
      Rod and
      HTTP
      REST endpoints)
      
      
      A
      rolebinding so
      that Kubernetes...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Last week we showed you
      &lt;a href=&quot;https://blog.infinispan.org/2018/11/the-fastest-path-to-running-infinispan.html&quot;&gt;how
      to easily run Infinispan on top of OpenShift&lt;/a&gt;. This week we’re trying to
      do the same on Minikube, a tool that makes it easy to run vanilla
      Kubernetes locally.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Although we’ve already covered the topic in the
      &lt;a href=&quot;https://blog.infinispan.org/2016/08/running-infinispan-cluster-on-kubernetes.html&quot;&gt;past&lt;/a&gt;,
      we felt the descriptors needed a permanent location and an update to the
      latest Infinispan releases. Detailed instructions can be found in
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-kubernetes&quot;&gt;this
      repository&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With OpenShift, we took advantage of
      &lt;a href=&quot;https://docs.openshift.com/container-platform/3.11/dev_guide/templates.html&quot;&gt;Templates&lt;/a&gt;
      which allow a set of objects to be parameterised.
      Templates are OpenShift specific, so Kubernetes does not understand
      them. Instead, we provide you with the individual descriptors required
      to run Infinispan (Helm chart to come…​). This includes:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;A
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/statefulset.yaml&quot;&gt;stateful
      set&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Two services, for
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/service-hotrod.yaml&quot;&gt;Hot
      Rod&lt;/a&gt; and
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/service-http.yaml&quot;&gt;HTTP
      REST&lt;/a&gt; endpoints)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;A
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/rolebinding.yaml&quot;&gt;rolebinding&lt;/a&gt; so
      that Kubernetes API can be queried when forming a cluster.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;A
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/secret.yaml&quot;&gt;secret&lt;/a&gt;
      for plain authentication.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Before applying the descriptors, download and install
      &lt;a href=&quot;https://kubernetes.io/docs/setup/minikube/&quot;&gt;Minikube&lt;/a&gt;. Then, set a
      profile, select the VM driver, give it enough CPU and memory for your
      experiments, and start it.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once Minikube it’s running and you have the corresponding kubectl
      command line tool installed, simply call:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;$ kubectl apply -f .&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once all pods are ready, you should verify the 3-node cluster has formed
      correctly (find out how in the
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-kubernetes/blob/master/README.md&quot;&gt;README&lt;/a&gt;
      file).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;When ready, you can start storing and retrieving data. The HTTP REST
      endpoint is particularly useful for these initial tests, to verify
      everything works as expected:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;$ kubectl exec \
        -it infinispan-server-0 \
        — curl -v -u test:changeme -H 'Content-type: text/plain' -d 'test'
      infinispan-server-http:8080/rest/default/stuff&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Then:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;$ kubectl exec -it infinispan-server-1 \
        — curl -v -u test:changeme
      infinispan-server-http:8080/rest/default/stuff&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Go and try it out and let us know what you think. You can find us on
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;this Zulip chat&lt;/a&gt; :)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/15/hotrod-clients-c-and-c-830final-are-out/</id>
    <title>Hotrod clients C++ and C# 8.3.0.Final are out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-15T01:18:00-08:00</published>
    <link href="//infinispan.org/blog/2018/11/15/hotrod-clients-c-and-c-830final-are-out/" rel="alternate" type="text/html" />
    <author>
      <name>rigazilla</name>
    </author>
    <category term=" c++"></category>
    <category term="release"></category>
    <category term="final"></category>
    <category term="c#"></category>
    <summary>
      Dear Infinispanners,
      
      
      The C++ and C# 8.3.0.Final releases are out!
      
      
      Main features contained in this release are:
      
      
      
      
      Cache Admin Operations: create and remove cache at runtime;
      
      
      Counters: clusterwide counters;
      
      
      Transactions: run a list of operations transactionally;
      
      
      Media Types: use differents media-types to encode (key,value) pairs.
      
      
      
      
      Source code, binaries and docs are available as usual at the links
      below.
      
      
      Thank you for reading,
      The Infinispan Team
      
      
      Release
      notes for the 8.3.0 serie
      [2] https://github.com/infinispan/cpp-client/tree/8.3.0.Final[C code
      for 8.3.0.Final]
      [2#] C#
      code for 8.3.0.Final...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispanners,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The C++ and C# 8.3.0.Final releases are out!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Main features contained in this release are:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Cache Admin Operations: create and remove cache at runtime;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Counters: clusterwide counters;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Transactions: run a list of operations transactionally;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Media Types: use differents media-types to encode (key,value) pairs.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Source code, binaries and docs are available as usual at the links
      below.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Thank you for reading,
      The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12314125&amp;amp;version=12339951&quot;&gt;Release
      notes for the 8.3.0 serie&lt;/a&gt;
      [2] https://github.com/infinispan/cpp-client/tree/8.3.0.Final[C code
      for 8.3.0.Final]
      [2#] &lt;a href=&quot;https://github.com/infinispan/dotnet-client/tree/8.3.0.Final&quot;&gt;C#
      code for 8.3.0.Final&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/12/the-fastest-path-to-running-infinispan/</id>
    <title>The fastest path to running Infinispan on OpenShift!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-12T00:41:00-08:00</published>
    <link href="//infinispan.org/blog/2018/11/12/the-fastest-path-to-running-infinispan/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" openshift"></category>
    <category term="minishift"></category>
    <summary>
      Creating an Infinispan Server cluster in OpenShift has never been
      easier! We&#8217;ve just given the OpenShift templates for Infinispan server
      their biggest makeover yet which should help both Infinispan and
      OpenShift users:
      
      
      The
      repository
      has been simplified and flattened out to only leave essential
      information. Minishift is the preferred
      way to get started with Infinispan and OpenShift, so we&#8217;ve tailored the
      instructions for this set up.
      
      
      OpenShift templates are now
      YAML
      based which is less verbose, but more importantly, allows Infinispan
      Server XML configuration to be shown as-is. This makes it easier to
      directly modify the XML in the template itself.
      
      
      The fastest way to get started with Infinispan and OpenShift is to
      simply fire up...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Creating an Infinispan Server cluster in OpenShift has never been
      easier! We’ve just given the OpenShift templates for Infinispan server
      their biggest makeover yet which should help both Infinispan and
      OpenShift users:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The
      &lt;a href=&quot;https://github.com/infinispan/infinispan-openshift-templates&quot;&gt;repository&lt;/a&gt;
      has been simplified and flattened out to only leave essential
      information. &lt;a href=&quot;https://www.okd.io/minishift/&quot;&gt;Minishift&lt;/a&gt; is the preferred
      way to get started with Infinispan and OpenShift, so we’ve tailored the
      instructions for this set up.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;OpenShift templates are now
      &lt;a href=&quot;https://github.com/infinispan/infinispan-openshift-templates/blob/master/infinispan-ephemeral.yaml&quot;&gt;YAML
      based&lt;/a&gt; which is less verbose, but more importantly, allows Infinispan
      Server XML configuration to be shown as-is. This makes it easier to
      directly modify the XML in the template itself.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The fastest way to get started with Infinispan and OpenShift is to
      simply fire up Minishift, set a profile, checkout our Infinipan
      OpenShift
      &lt;a href=&quot;https://github.com/infinispan/infinispan-openshift-templates&quot;&gt;repository&lt;/a&gt;
      and then call:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;oc create -f infinispan-ephemeral.yaml
      oc new-app infinispan-ephemeral&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;These two simple steps will get you a single node Infinispan Server
      running! A more detailed getting started guide can be found in the
      repository’s
      &lt;a href=&quot;https://github.com/infinispan/infinispan-openshift-templates/blob/master/README.asciidoc&quot;&gt;README&lt;/a&gt;
      file.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Go and try it out and let us know what you think. You can find us on
      this &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip chat&lt;/a&gt; :)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/09/infinispan-941final-and-infinispan/</id>
    <title>Infinispan 9.4.1.Final and Infinispan Spring Boot Starter 2.1.0.Final are out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-09T03:18:00-08:00</published>
    <link href="//infinispan.org/blog/2018/11/09/infinispan-941final-and-infinispan/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term=" release"></category>
    <category term="spring boot"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just released
      Infinispan 9.4.1.Final
      and Infinispan
      Spring Boot 2.1.0.Final.
      
      
      Highlights of the Infinispan release include:
      
      
      
      
      Export Data Grid stats to Prometheus
      (ISPN-9558)
      
      
      Upgrade RocksDB version
      (ISPN-9603)
      
      
      Upgrade Narayana to version 5.9.0.Final
      (ISPN-9639)
      
      
      Upgrade to
      protostream-4.2.2.Final
      (ISPN-9654)
      
      
      Update Cassandra Store to Infinispan
      9.4(ISPN-9595)
      
      
      Handle ClientCacheEntryExpired into InvalidatedNearCacheListener
      (ISPN-7087)
      
      
      Bug fixes
      
      
      Additional
      code simple
      examples such as remote multimap or near caching 
      
      
      
      
      Complete release notes can be
      read here.
      
      
      Highlights of the Infinispan-Spring-Boot release include:
      
      
      
      
      Upgrade Spring-Boot version to
      2.1.0
      
      
      Upgrade Infinispan version to 9.4.1
      
      
      Integration with Spring Actuator, to expose production ready metrics
      (ISPN-9668)
      
      
      Bug fixes
      
      
      Additional
      code
      examples
      
      
      
      
      You can find these releases in the maven central repository.
      
      
      Please report any issues in
      our issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released
      &lt;a href=&quot;https://github.com/infinispan/infinispan&quot;&gt;Infinispan&lt;/a&gt; &lt;strong&gt;9.4.1.Final&lt;/strong&gt;
      and &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan
      Spring Boot&lt;/a&gt; &lt;strong&gt;2.1.0.Final&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Highlights of the &lt;strong&gt;Infinispan&lt;/strong&gt; release include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Export Data Grid stats to &lt;a href=&quot;https://prometheus.io/&quot;&gt;Prometheus&lt;/a&gt;
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9558&quot;&gt;ISPN-9558&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade &lt;a href=&quot;https://rocksdb.org/&quot;&gt;RocksDB&lt;/a&gt; version
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9603&quot;&gt;ISPN-9603&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade &lt;a href=&quot;http://narayana.io/&quot;&gt;Narayana&lt;/a&gt; to version 5.9.0.Final
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9639&quot;&gt;ISPN-9639&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade to
      &lt;a href=&quot;https://github.com/infinispan/protostream&quot;&gt;protostream-4.2.2.Final&lt;/a&gt;
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9654&quot;&gt;ISPN-9654&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Update Cassandra Store to Infinispan
      9.4(&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9595&quot;&gt;ISPN-9595&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Handle ClientCacheEntryExpired into InvalidatedNearCacheListener
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-7087&quot;&gt;ISPN-7087&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Bug fixes&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Additional
      &lt;a href=&quot;https://github.com/infinispan/infinispan-simple-tutorials&quot;&gt;code simple
      examples&lt;/a&gt; such as remote multimap or near caching &lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Complete release notes can be
      read &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12339377&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Highlights of the &lt;strong&gt;Infinispan-Spring-Boot&lt;/strong&gt; release include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade &lt;strong&gt;Spring-Boot&lt;/strong&gt; version to
      &lt;a href=&quot;https://spring.io/blog/2018/10/30/spring-boot-2-1-0&quot;&gt;2.1.0&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade &lt;strong&gt;Infinispan&lt;/strong&gt; version to 9.4.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Integration with Spring Actuator, to expose production ready metrics
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9668&quot;&gt;ISPN-9668&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Bug fixes&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Additional
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot/tree/master/infinispan-spring-boot-samples&quot;&gt;code
      examples&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find these releases in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/02/infinispan-triple-connector-release/</id>
    <title>Infinispan triple connector release!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-02T03:57:00-07:00</published>
    <link href="//infinispan.org/blog/2018/11/02/infinispan-triple-connector-release/" rel="alternate" type="text/html" />
    <author>
      <name>Gustavo</name>
    </author>
    <category term=" release"></category>
    <category term="kafka"></category>
    <category term="spark"></category>
    <category term="hadoop"></category>
    <summary>
      Infinispan Spark, Infinispan Hadoop and Infinispan Kafka have a new
      fresh release each!
      
      
      
      
      Infinispan Spark 0.9
      
      
      
       
      
      The native Apache Spark connector now supports Infinispan 9.4.x and
      Spark 2.3.2, and it exposes Infinispan&#8217;s new transcoding capabilities,
      enabling the InfinispanRDD and InfinispanDStream to operate with
      multiple data formats. For more details see the
      documentation.
      
      
      
      Infinispan Hadoop 0.3
      
      
      
      
      
      
      The connector that allows accessing Infinispan using standard
      Input/OutputFormat interfaces now offers compatibility with Infinispan
      9.4.x and has been certified to run with the Hadoop 3.1.1 runtime. For
      more details about this connector, see the
      user
      manual. Also make sure to check the docker based demos:
      Infinispan
      + Yarn and
      Infinispan
      + Apache Flink.
      
      
      
      Infinispan Kafka 0.3
      
      
      
       
      
      Last but not least, the
      Infinispan Kafka
      connector was upgraded...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan Spark, Infinispan Hadoop and Infinispan Kafka have a new
      fresh release each!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_infinispan_spark_0_9&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_infinispan_spark_0_9&quot;&gt;&lt;/a&gt;&lt;span class=&quot;underline&quot;&gt;Infinispan Spark 0.9&lt;/span&gt;&lt;/h4&gt;
      
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The native Apache Spark connector now supports Infinispan 9.4.x and
      Spark 2.3.2, and it exposes Infinispan’s new transcoding capabilities,
      enabling the &lt;em&gt;InfinispanRDD&lt;/em&gt; and &lt;em&gt;InfinispanDStream&lt;/em&gt; to operate with
      multiple data formats. For more details see the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spark/blob/master/README.md#using-multiple-data-formats&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_infinispan_hadoop_0_3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_infinispan_hadoop_0_3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;underline&quot;&gt;Infinispan Hadoop 0.3&lt;/span&gt;&lt;/h4&gt;
      &lt;div class=&quot;exampleblock&quot;&gt;
      &lt;div class=&quot;content&quot;&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The connector that allows accessing Infinispan using standard
      Input/OutputFormat interfaces now offers compatibility with Infinispan
      9.4.x and has been certified to run with the Hadoop 3.1.1 runtime. For
      more details about this connector, see the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-hadoop/blob/master/README.md&quot;&gt;user
      manual&lt;/a&gt;. Also make sure to check the docker based demos:
      &lt;a href=&quot;https://github.com/infinispan/infinispan-hadoop/tree/master/samples/mapreduce&quot;&gt;Infinispan
      + Yarn&lt;/a&gt; and
      &lt;a href=&quot;https://github.com/infinispan/infinispan-hadoop/tree/master/samples/flink&quot;&gt;Infinispan
      + Apache Flink&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_infinispan_kafka_0_3&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_infinispan_kafka_0_3&quot;&gt;&lt;/a&gt;&lt;span class=&quot;underline&quot;&gt;Infinispan Kafka 0.3&lt;/span&gt;&lt;/h4&gt;
      
      &lt;/div&gt;
      &lt;div class=&quot;sect3&quot;&gt;
      &lt;h4 id=&quot;_2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_2&quot;&gt;&lt;/a&gt; &lt;/h4&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Last but not least, the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-kafka&quot;&gt;Infinispan Kafka
      connector&lt;/a&gt; was upgraded to work with the latest Kafka (2.0.x) and
      Infinispan releases (9.4.x). Many thanks to
      &lt;a href=&quot;https://github.com/oscerd&quot;&gt;Andrea Cosentino&lt;/a&gt; for contributing this
      integration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-ZU37uOY-U6o/W9wW5BsT2eI/AAAAAAAAAm8/XTAKrrcdvK8eo3j_gMdvtbshHOYR10aPwCEwYBhgL/s1600/connectors.jpg&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://3.bp.blogspot.com/-ZU37uOY-U6o/W9wW5BsT2eI/AAAAAAAAAm8/XTAKrrcdvK8eo3j_gMdvtbshHOYR10aPwCEwYBhgL/s320/connectors.jpg&quot; alt=&quot;image&quot; width=&quot;320&quot; height=&quot;207&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/02/infinispan-934final-released/</id>
    <title>Infinispan 9.3.4.Final released!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-02T01:51:00-07:00</published>
    <link href="//infinispan.org/blog/2018/11/02/infinispan-934final-released/" rel="alternate" type="text/html" />
    <author>
      <name>Gustavo</name>
    </author>
    <category term=" release"></category>
    <category term="remote query"></category>
    <summary>
      This is a bug fix release and users currently on 9.3.x are encouraged to
      upgrade, specially when using the query functionality.
      
      
      For a list of fixes, please consult the
      release
      notes....
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is a bug fix release and users currently on 9.3.x are encouraged to
      upgrade, specially when using the query functionality.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For a list of fixes, please consult the
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12339151&quot;&gt;release
      notes&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/11/02/near-caching-with-spring-boot-and/</id>
    <title>Near caching with Spring-Boot and Infinispan</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-11-02T01:27:00-07:00</published>
    <link href="//infinispan.org/blog/2018/11/02/near-caching-with-spring-boot-and/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term="hotrod"></category>
    <category term="near caching"></category>
    <category term="spring"></category>
    <category term="spring boot"></category>
    <summary>
      We have recently released
      infinispan-spring-boot-starter
      2.0.0.Final. This version supports
      Spring Boot 2.1 and
      Infinispan 9.4.0.Final.
      
      
      Before this release, some important features - such as near caching -
      were only configurable by code.
      From now on, we can set all of the Hot Rod client configuration using
      the hotrod.properties file or
      the Spring application YAML.
      The latter is an important community requirement we had.
      
      
      Let&#8217;s see how to speed up our applications performance
      with near
      caching!
      
      
      ==
      
      
      ==
      
      
      
      
      Hot Rod
      
      
       
      
      Just as a quick reminder, Infinispan can be used embedded in your
      application or in client/server mode. To connect you application to a
      server you can use an Infinispan
      Client and the Infinispan
      “Hot
      Rod Protocol”. Other protocols are available, such as REST, but Hot...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have recently released
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;infinispan-spring-boot-starter&lt;/a&gt;
      &lt;strong&gt;2.0.0.Final&lt;/strong&gt;. This version supports
      &lt;a href=&quot;https://spring.io/projects/spring-boot&quot;&gt;Spring Boot 2.1&lt;/a&gt; and
      &lt;a href=&quot;http://infinispan.org/&quot;&gt;Infinispan 9.4.0.Final&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Before this release, some important features - such as near caching -
      were only configurable by code.
      From now on, we can set all of the Hot Rod client configuration using
      the &lt;strong&gt;hotrod.properties&lt;/strong&gt; file or
      the &lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9437&quot;&gt;Spring application YAML&lt;/a&gt;.
      The latter is an important community requirement we had.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Let’s see how to speed up our applications performance
      with &lt;a href=&quot;http://infinispan.org/docs/stable/user_guide/user_guide.html#near_caching&quot;&gt;near
      caching&lt;/a&gt;!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;==&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;==&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_hot_rod&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_hot_rod&quot;&gt;&lt;/a&gt;Hot Rod&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Just as a quick reminder, Infinispan can be used embedded in your
      application or in &lt;strong&gt;client/server&lt;/strong&gt; mode. To connect you application to a
      server you can use an &lt;a href=&quot;http://infinispan.org/hotrod-clients/&quot;&gt;Infinispan
      Client&lt;/a&gt; and the Infinispan
      &lt;a href=&quot;http://infinispan.org/docs/stable/user_guide/user_guide.html#hot_rod_server_usage&quot;&gt;“Hot
      Rod Protocol”&lt;/a&gt;. Other protocols are available, such as REST, but Hot Rod
      is the most recommended way since it is the one that supports most of
      the Infinispan functionalities.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_near_cache&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_near_cache&quot;&gt;&lt;/a&gt;Near cache&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;From the Infinispan
      &lt;a href=&quot;http://infinispan.org/docs/stable/user_guide/user_guide.html#near_caching&quot;&gt;documentation&lt;/a&gt;:
      Hot Rod client can keep a local cache that stores recently used data.
      Enabling near caching can significantly improve the performance of read
      operations &lt;strong&gt;get&lt;/strong&gt; and &lt;strong&gt;getVersioned&lt;/strong&gt; since data can potentially be
      located locally within the Hot Rod client instead of having to go
      remote.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_when_should_i_use_it&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_when_should_i_use_it&quot;&gt;&lt;/a&gt;When should I use it? &lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Near caching can improve the performance of an application when most of
      the accesses to a given cache are read-only and the accessed dataset is
      relatively small.
      When an application is doing lots of writes to a cache, invalidations,
      evictions and updates to the near cache need to happen. In this scenario
      we won’t probably get much benefit.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As I said in the introduction, the good news is that &lt;strong&gt;this feature can
      be activated just by configuration&lt;/strong&gt;. Code doesn’t change, so we can
      measure the benefits, if such exist, in a very straightforward way.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_spring_boot&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_spring_boot&quot;&gt;&lt;/a&gt;Spring-Boot&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;I have created a very simple application, available
      &lt;a href=&quot;https://github.com/infinispan-demos/infinispan-near-cache&quot;&gt;here&lt;/a&gt;. Maven,
      Java 8 and an Infinispan server are required to run it. You can
      &lt;a href=&quot;http://downloads.jboss.org/infinispan/9.4.0.Final/infinispan-server-9.4.0.Final.zip&quot;&gt;download
      the server&lt;/a&gt; or
      use &lt;a href=&quot;https://hub.docker.com/r/jboss/infinispan-server/&quot;&gt;docker&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Docker: docker run -it -p 11222:11222
      jboss/infinispan-server:9.4.0.Final&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Standalone: PATH/infinispan-server-9.4.0.Final/bin/standalone.sh&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Once the server is up and running, build the application using maven &lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&amp;gt;&amp;gt; infinispan-near-cache: mvn clean install&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_writer&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_writer&quot;&gt;&lt;/a&gt;Writer &lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This application loads the required data to a remote cache: a list of
      some of the Infinispan contributors over the last decade.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&amp;gt;&amp;gt; writer: mvn spring-boot:run&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_reader&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_reader&quot;&gt;&lt;/a&gt;Reader &lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The reader application does 10.000 accesses to the contributors cache.
      Using a random id, I call 10.000 times the get method. The job gets done
      in my laptop in ~4000 milliseconds.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&amp;gt;&amp;gt; reader-no-near-cache: mvn spring-boot:run&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_activating_the_near_cache&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_activating_the_near_cache&quot;&gt;&lt;/a&gt;Activating the near cache&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;I need to configure two properties:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Near Cache Mode:&lt;/strong&gt; DISABLED or INVALIDATED. Default value is DISABLED,
      so I turn it on with &lt;strong&gt;INVALIDATED&lt;/strong&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Max Entries:&lt;/strong&gt; Integer value that sets the max size of the near
      caches. There is no default value, so I set up one.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The hotrod client configuration is &lt;span class=&quot;underline&quot;&gt;for each client&lt;/span&gt;,
      &lt;span class=&quot;underline&quot;&gt;not for each cache&lt;/span&gt; (this might change in the future). With
      that in mind, note that configuring the previous properties will
      activate near caching &lt;strong&gt;for all the caches&lt;/strong&gt;. If you need to activate it
      just for &lt;strong&gt;some of them&lt;/strong&gt;, add the following property:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;&lt;strong&gt;Cache Name Pattern:&lt;/strong&gt;  String pattern. For example &quot;i8n-.*&quot; will
      activate the near caching for all the caches whose name starts by
      &quot;i8n-&quot;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Configuration can be placed in the &lt;strong&gt;hotrod-client.properties&lt;/strong&gt;,
      &lt;strong&gt;Spring-boot configuration&lt;/strong&gt; or &lt;strong&gt;code&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_hotrod_client_properties&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_hotrod_client_properties&quot;&gt;&lt;/a&gt;hotrod-client.properties&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;infinispan.client.hotrod.near_cache.mode=&lt;/strong&gt;INVALIDATED&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;infinispan.client.hotrod.near_cache.max_entries=&lt;/strong&gt;40&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;infinispan.client.hotrod.near_cache.cache_name_pattern=*i8n-.&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_application_yaml_or_properties&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_application_yaml_or_properties&quot;&gt;&lt;/a&gt;application.yaml (or properties)&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;infinispan:&lt;/strong&gt;
         &lt;strong&gt;remote:&lt;/strong&gt;
           &lt;strong&gt;near-cache-mode:&lt;/strong&gt; INVALIDATED
           &lt;strong&gt;near-cache-max-entries:&lt;/strong&gt; 10
           &lt;strong&gt;near-cache-cache-name-pattern:&lt;/strong&gt; i8n-.*&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect4&quot;&gt;
      &lt;h5 id=&quot;_code&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_code&quot;&gt;&lt;/a&gt;code &lt;/h5&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With the Infinispan Spring-Boot Starter, I can add custom configuration
      using the &lt;strong&gt;InfinispanRemoteCacheCustomizer&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_results&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_results&quot;&gt;&lt;/a&gt;Results&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;My dataset contains 25 contributors. If I activate the near cache with
      max 12 entries and I run my reader again, I get the job done in ~1900
      milliseconds, which is already an improvement. If I configure it to hold
      the complete dataset, I get it done in ~220 milliseconds, which is a big
      one!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_conclusions&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_conclusions&quot;&gt;&lt;/a&gt;Conclusions&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Near caching can help us speed up our client applications if configured
      properly. We can test our tuning easily because we only need to add some
      configuration to the client. Finally, the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Spring-Boot
      Infinispan Starter&lt;/a&gt; helps us build services with Spring-Boot and
      Infinispan. &lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Further work will be done to help Spring-Boot users work with
      Infinispan, so stay tuned! Any feedback on the starter or any
      requirement from the community is more that welcome. Find us
      in &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; for direct contact or
      post your questions in
      &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/10/31/native-json-and-node-811-baseline-in/</id>
    <title>Native JSON and Node 8.11 baseline in Node.js client 0.6.0!!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-10-31T05:10:00-07:00</published>
    <link href="//infinispan.org/blog/2018/10/31/native-json-and-node-811-baseline-in/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" release"></category>
    <category term="javascript"></category>
    <category term="node.js"></category>
    <summary>
      Infinispan Node.js client 0.6.0 is out now!! :)
      
      
      As well as updating the client so that it understand the latest Hot Rod
      protocols in Infinispan 9.4.0.Final, this version comes with native JSON
      object support.
      
      
      To make the Node.js client backwards compatible, the client still treats
      key/value pairs as String by default. If you want to use native JSON
      objects, you have to explicitly configure the Node.js client to do so
      (see
      example).
      
      
      Starting with this version, we&#8217;ve upgraded the base Node version
      requirement to 8.11, which is the latest stable release branch at the
      time of writing. With such upgrade, the client no longer needs to use
      external promise dependency which was...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan Node.js client 0.6.0 is out now!! :)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As well as updating the client so that it understand the latest Hot Rod
      protocols in Infinispan 9.4.0.Final, this version comes with native JSON
      object support.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;To make the Node.js client backwards compatible, the client still treats
      key/value pairs as String by default. If you want to use native JSON
      objects, you have to explicitly configure the Node.js client to do so
      (see
      &lt;a href=&quot;https://github.com/infinispan/js-client#supported-data-types&quot;&gt;example&lt;/a&gt;).&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Starting with this version, we’ve upgraded the base Node version
      requirement to 8.11, which is the latest stable release branch at the
      time of writing. With such upgrade, the client no longer needs to use
      external promise dependency which was know to
      &lt;a href=&quot;https://issues.jboss.org/browse/HRJS-63&quot;&gt;leak&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you’re a Node.js user and want to store data remotely in Infinispan
      server instances, please give the client a go and tell us what you think
      of it via our &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt;,
      via our &lt;a href=&quot;https://issues.jboss.org/projects/HRJS&quot;&gt;issue tracker&lt;/a&gt; or via
      &lt;a href=&quot;https://zulipchat.com/&quot;&gt;Zulip&lt;/a&gt; on
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Infinispan channel&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/10/11/infinispan-spring-boot-200final-is-out/</id>
    <title>Infinispan Spring Boot 2.0.0.Final is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-10-11T00:51:00-07:00</published>
    <link href="//infinispan.org/blog/2018/10/11/infinispan-spring-boot-200final-is-out/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term="spring"></category>
    <category term="spring boot"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just released
      Infinispan Spring
      Boot 2.0.0.Final.
      If you are wondering why it is worth to use this starter, read
      Sebastian&#8217;s article
      here!
      
      
      Highlights of this release include:
      
      
      
      
      Uses the latest Infinispan
      9.4.0.Final
      
      
      Automatic translation of Hot Rod client properties into Spring YAML
      (ISPN-9437)
      
      
      Bug fixes
      
      
      
      
      You can find the release in the maven central repository.
      
      
      Please report any issues in
      our issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan Spring
      Boot&lt;/a&gt; &lt;strong&gt;2.0.0.Final&lt;/strong&gt;.
      If you are wondering why it is worth to use this starter, read
      Sebastian’s article
      &lt;a href=&quot;https://blog.infinispan.org/2016/12/spring-boot-starters.html&quot;&gt;here&lt;/a&gt;!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Highlights of this release include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Uses the latest Infinispan
      &lt;a href=&quot;https://blog.infinispan.org/2018/10/infinispan-940final.html&quot;&gt;9.4.0.Final&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Automatic translation of Hot Rod client properties into Spring YAML
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9437&quot;&gt;ISPN-9437&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Bug fixes&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find the release in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/10/08/infinispan-940final/</id>
    <title>Infinispan 9.4.0.Final</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-10-08T00:34:00-07:00</published>
    <link href="//infinispan.org/blog/2018/10/08/infinispan-940final/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term=" release"></category>
    <summary>
      Infinispan 9.4.0.Final “Infinity Minus ONE +2”
      
      
      
      
      
       
      
      
      10 years of Infinispan
      
      Infinispan is 10 years old this month, and what better way to celebrate
      than with a brand new Final release !!!
      
      
      
      What&#8217;s new
      
      Infinispan 9.4 comes with the following new features / improvements:
      
      
      Segments everywhere
      9.3 brought the segmented on-heap memory container. 9.4 extends this to
      provide the benefits of segmentation to off-heap as well as all of the
      core cache stores. Watch as your bulk operations (size, iteration,
      streams) get a big performance boost !
      
      
      Transcoding everywhere
      To paraphrase the Grand Moff Tarkin, “The last remnants of Compatibility
      Mode have been swept away”. Transcoding, i.e. the ability to
      transparently convert between a number...
    </summary>
    <content type="html">
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_infinispan_9_4_0_final_infinity_minus_one_2&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_infinispan_9_4_0_final_infinity_minus_one_2&quot;&gt;&lt;/a&gt;Infinispan 9.4.0.Final “Infinity Minus ONE +2”&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_10_years_of_infinispan&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_10_years_of_infinispan&quot;&gt;&lt;/a&gt;10 years of Infinispan&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan is 10 years old this month, and what better way to celebrate
      than with a brand new Final release !!!&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_whats_new&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_whats_new&quot;&gt;&lt;/a&gt;What’s new&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan 9.4 comes with the following new features / improvements:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Segments everywhere
      9.3 brought the segmented on-heap memory container. 9.4 extends this to
      provide the benefits of segmentation to off-heap as well as all of the
      core cache stores. Watch as your bulk operations (size, iteration,
      streams) get a big performance boost !&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Transcoding everywhere
      To paraphrase the Grand Moff Tarkin, “The last remnants of Compatibility
      Mode have been swept away”. Transcoding, i.e. the ability to
      transparently convert between a number of formats across different
      endpoints, is now “fully operational”.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Transactions everywhere
      Hot Rod transactions now support recovery.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Hot Rod client improvements
      The Hot Rod client has received many improvements:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Client-side statistics, complete with JMX support&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Improvements to the scalability and the behaviour of near-caches&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;All of the configuration can now be supplied via the properties, which
      also means easier integration with other frameworks, such as Spring
      Boot.&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Query improvements
      Many cleanups and improvements&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Bugfixes, stability, reliability
      Although not as exciting as new features, we continued our work to
      improve the stability, reliability and performance of all aspects of
      Infinispan.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Upgrades:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;As usual the latest and greatest JGroups 4.0.15&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The server is now based on WildFly 14&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_get_it_use_it_ask_us&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_get_it_use_it_ask_us&quot;&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;,
      &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;ask questions on the
      forum&lt;/a&gt; or on
      &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/10/02/segmented-data-containers-distributed/</id>
    <title>Segmented Data Containers: Distributed Stream Performance Boost</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-10-02T11:11:00-07:00</published>
    <link href="//infinispan.org/blog/2018/10/02/segmented-data-containers-distributed/" rel="alternate" type="text/html" />
    <author>
      <name>Unknown</name>
    </author>
    <category term=" streams"></category>
    <category term="segmented"></category>
    <category term="data container"></category>
    <category term="performance"></category>
    <summary>
      Welcome to the first of several blog posts that describe the
      segmentation of containers that Infinispan uses to store data. Some of
      you may have noticed in the previous
      9.3.0.Final
      notes that we announced a new feature named “Segmented On-Heap Data
      Container”. We also mentioned that “It improves performance of stream
      operations”, but what does that really mean?
      
      
      
      
      What is a segmented data container and why does it matter? 
      
      
      Imagine a cluster of 4 nodes in distributed mode (numOwners = 2) with
      entries for k0 - k13. It might look like this:
      
      
      
      
      
      The data is distributed between the nodes with only two copies of each
      entry available. However, the data itself...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Welcome to the first of several blog posts that describe the
      segmentation of containers that Infinispan uses to store data. Some of
      you may have noticed in the previous
      &lt;a href=&quot;https://blog.infinispan.org/2018/06/infinispan-930final-is-out.html&quot;&gt;9.3.0.Final
      notes&lt;/a&gt; that we announced a new feature named “Segmented On-Heap Data
      Container”. We also mentioned that “It improves performance of stream
      operations”, but what does that really mean?&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_what_is_a_segmented_data_container_and_why_does_it_matter&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_what_is_a_segmented_data_container_and_why_does_it_matter&quot;&gt;&lt;/a&gt;What is a segmented data container and why does it matter? &lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Imagine a cluster of 4 nodes in distributed mode (numOwners = 2) with
      entries for k0 - k13. It might look like this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-5FopP39_Z6k/W7O94C_HrAI/AAAAAAAAeDM/xWnwzer_RP8gQBlZvDI5MOY-Qroof7S_gCLcBGAs/s1600/NonSegmentedData.jpg&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-5FopP39_Z6k/W7O94C_HrAI/AAAAAAAAeDM/xWnwzer_RP8gQBlZvDI5MOY-Qroof7S_gCLcBGAs/s640/NonSegmentedData.jpg&quot; alt=&quot;image&quot; width=&quot;640&quot; height=&quot;568&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The data is distributed between the nodes with only two copies of each
      entry available. However, the data itself is stored internally in the
      same Map instance. As a result, when performing operations on all
      entries in the cache, Infinispan must iterate over the same data
      multiple times. This degrades performance.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As of Infinispan 9.3, a segmented data container is available to
      separate data by segments. Although only on-heap bounded and unbounded
      implementations are currently available.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;With a segmented data container, that same data set might look like
      this:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://2.bp.blogspot.com/-7S1k7hNmrHI/W7O99geUbkI/AAAAAAAAeDQ/k5tbJq0w22ovQxpNG2uXcMIV63HIvz4MQCLcBGAs/s1600/SegmentedData.jpg&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-7S1k7hNmrHI/W7O99geUbkI/AAAAAAAAeDQ/k5tbJq0w22ovQxpNG2uXcMIV63HIvz4MQCLcBGAs/s640/SegmentedData.jpg&quot; alt=&quot;image&quot; width=&quot;640&quot; height=&quot;562&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Because Infinispan internally reasons on data in terms of segments, a
      segmented data container lets Infinispan process data only in specific
      segments. This allows for operations performed upon all entries to
      require iteration over the data only once.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_actual_performance_difference&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_actual_performance_difference&quot;&gt;&lt;/a&gt;Actual Performance Difference&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So with the above example you might be thinking that the performance
      increase maximum is two times throughput, since numOwners is two. This
      is close, but not quite correct. While iterating on the data we also
      have to determine what segment an entry belongs to. With a segmented
      container we know this already, so there is no need to calculate that.
      This provides additional performance, as you will see.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The following graphs were generated using the benchmark at
      &lt;a href=&quot;https://github.com/infinispan/infinispan-benchmarks/tree/master/iteration&quot; class=&quot;bare&quot;&gt;https://github.com/infinispan/infinispan-benchmarks/tree/master/iteration&lt;/a&gt;.
      The following command was run: &lt;strong&gt;java -jar target/benchmarks.jar
      -pvalueObjectSize=1000 -pentryAmount=50000 -pbatchSize=4096&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;&lt;span id=&quot;docs-internal-guid-9b20945e-7fff-7241-2261-95b975ba8902&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/XMXQWsWISdPTt-93vLV5RgnJld-ASxkiWaXDZ-O1guXkoe87fYj1Ra2mlQHfcnTmVlXKNTZhk5T095pL99PjqlHgCbqlpFLyvQoTSBarR65wO275T7syowLSBxZl8syWKSYF9H43&quot; alt=&quot;image&quot; width=&quot;624&quot; height=&quot;385&quot; title=&quot;Chart&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The preceding graph is the result of the iteration methods. As you can
      notice the performance increase isn’t that much… why not?!?&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Unfortunately, remote iteration requires a lot of network overhead, so
      we don’t get to see the full benefits of segmentation. But at least it
      is about 5-12% faster, not too shabby.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Now to show the real improvement, here is the chart showing the
      performance increase for the Cache#size operation:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;span id=&quot;docs-internal-guid-413b551a-7fff-9931-559d-9fda906ad6b1&quot;&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/HHbRs5_4t4jE_7j8l3ArlsuPCgFXjh7zZXLGJXo3e9LLOP-matr7qTGzLiH8RpW9at1IimMrtC-LNKSsQmAujhMjVXxj31ruTGfEHeP9J-rTpUIFo0WjoyY_NCezBD6WtUj2NVgy&quot; alt=&quot;image&quot; width=&quot;624&quot; height=&quot;385&quot; title=&quot;Chart&quot; /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you notice there is &lt;strong&gt;huge&lt;/strong&gt; increase in performance: almost a three
      fold increase over the non-segmented container, even though numOwners is
      only two. The old segment calculation adds a bit of overhead compared to
      just incrementing a number.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So keep in mind this change will show a larger gain in performance if
      the result returned is smaller, especially if it is a fixed size, such
      as a single int for Cache#size.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_what_about_gets_and_puts&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_what_about_gets_and_puts&quot;&gt;&lt;/a&gt;What about gets and puts?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Having the container segmented should also affect get and put
      performance as well, right? In testing the difference for get and puts
      are less than one percent, in favor of segmentation due to some
      optimizations we were able to add.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_how_do_i_enable_this&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_how_do_i_enable_this&quot;&gt;&lt;/a&gt;How do I enable this?&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So the performance gains are noticeable, especially when the remote
      operation returns a small data set. But how can a user configure this?
      This is the nice part, due to no performance loss with other operations
      the container will always be segmented as long as the cache mode
      supports segmentation. That is if it is a Distributed, Replicated or
      Scattered cache.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect1&quot;&gt;
      &lt;h2 id=&quot;_a_real_life_example_and_closing&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_a_real_life_example_and_closing&quot;&gt;&lt;/a&gt;A real-life example and closing&lt;/h2&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Since this feature has been around a while already, we actually have
      users gaining benefits from this feature. An example can be found at
      &lt;a href=&quot;https://developer.jboss.org/message/983837#983837&quot; class=&quot;bare&quot;&gt;https://developer.jboss.org/message/983837#983837&lt;/a&gt;. In this case the user
      only upgraded to Infinispan 9.3 and received over a three-fold increase
      in performance when using distributed streams. It actually starts to
      bring distributed streams performance within range of indexed query for
      some use cases.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;So, by upgrading your application to Infinispan 9.3 or newer, you will
      benefit from these improvements. There will be future posts regarding
      segmentation, including support for stores. Either way please feel free
      to &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download Infinispan&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;, ask questions on the
      &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt; or on
      &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/09/17/infinispan-940cr3-933-and-codename-vote/</id>
    <title>Infinispan 9.4.0.CR3, 9.3.3 and codename vote</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-09-17T00:15:00-07:00</published>
    <link href="//infinispan.org/blog/2018/09/17/infinispan-940cr3-933-and-codename-vote/" rel="alternate" type="text/html" />
    <author>
      <name>Tristan Tarrant</name>
    </author>
    <category term=" release"></category>
    <category term="release candidate"></category>
    <summary>
      Hi Infinispan Community,
      
      
      our original plan was to release 9.4 Final today, but we have decided to
      delay the release by an extra sprint (3 weeks).
      So today we are announcing 9.4.0.CR3 instead, which comes with the
      following fixes:
      
      
      
      
      Segmented off-heap data container
      
      
      Performance improvements for Near Caches
      
      
      Hot Rod client-side statistics
      
      
      Removal of the old compatibility mode in favor of the new transcoding
      capabilities is now complete
      
      
      Server rebased on top of WildFly 14
      
      
      Lots of code cleanups, especially around query
      
      
      Bug fixes
      
      
      
      
      For those of you on our stable branch, we also released a 9.3.3 with
      some bug fixes.
      
      
      Please download,
      report bugs,
      chat with us, ask questions on the
      forum or on
      StackOverflow.
      
      
      As this release is...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Hi Infinispan Community,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;our original plan was to release 9.4 Final today, but we have decided to
      delay the release by an extra sprint (3 weeks).
      So today we are announcing 9.4.0.CR3 instead, which comes with the
      following fixes:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Segmented off-heap data container&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Performance improvements for Near Caches&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Hot Rod client-side statistics&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Removal of the old compatibility mode in favor of the new transcoding
      capabilities is now complete&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Server rebased on top of WildFly 14&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Lots of code cleanups, especially around query&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Bug fixes&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For those of you on our stable branch, we also released a 9.3.3 with
      some bug fixes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;report bugs&lt;/a&gt;,
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat with us&lt;/a&gt;, ask questions on the
      &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt; or on
      &lt;a href=&quot;https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;As this release is yet unnamed, please make sure you vote for the
      name:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Loading…​&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/09/04/infinispan-spring-boot-beta2-is-out/</id>
    <title>Infinispan Spring Boot Beta2 is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-09-04T07:23:00-07:00</published>
    <link href="//infinispan.org/blog/2018/09/04/infinispan-spring-boot-beta2-is-out/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term="release"></category>
    <category term="spring boot"></category>
    <category term="spring"></category>
    <category term="beta"></category>
    <summary>
      Dear Infinispan and Spring Boot users,
      
      
      We have just released
      Infinispan Spring
      Boot 2.0.0.Beta2.
      
      
      Highlights of this release include:
      
      
      
      
      Upgrade to Spring Boot
      2.0.3.RELEASE
      
      
      RemoteCache can be injected now. Example
      here 
      
      
      
      
      You can find the release in the maven central repository.
      
      
      Please report any issues in
      our issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan and Spring Boot users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spring-boot&quot;&gt;Infinispan Spring
      Boot&lt;/a&gt; &lt;strong&gt;2.0.0.Beta2&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Highlights of this release include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade to &lt;a href=&quot;https://spring.io/projects/spring-boot&quot;&gt;Spring Boot&lt;/a&gt;
      2.0.3.RELEASE&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;RemoteCache can be injected now. Example
      &lt;a href=&quot;https://github.com/infinispan/infinispan-simple-tutorials/tree/master/spring-boot/remote&quot;&gt;here&lt;/a&gt; &lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find the release in the maven central repository.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Please report any issues in
      our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/08/30/infinispan-932final-and-940cr2-are-out/</id>
    <title>Infinispan 9.3.2.Final and 9.4.0.CR2 are out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-08-30T07:46:00-07:00</published>
    <link href="//infinispan.org/blog/2018/08/30/infinispan-932final-and-940cr2-are-out/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term=" release"></category>
    <category term="final"></category>
    <category term="release candidate"></category>
    <summary>
      Dear Infinispan users,
      
      
      We have just released 9.3.2.Final and 9.4.0.CR2.
      
      
      9.3.2.Final includes bug fixes and improvements.
      
      
      Highlights of this release include:
      
      
      
      
      Upgrade to protostream 4.2.1.Final
      (ISPN-9399) 
      
      
      Ship basic analyzers by default
      (ISPN-9429) 
      
      
      Avoid unneeded parentheses in Ickle query string generated by
      QueryBuilder (ISPN-9378) 
      
      
      
      
      The full list of 9.3.2.Final fixes are
      here.
      
      
      9.4.0.CR2 has been released due to an internal issue we experienced
      releasing CR1.
      
      
      You can find both releases on our
      download page. Please report any issues
      in our issue tracker and join
      the conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The Infinispan Team...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released &lt;strong&gt;9.3.2.Final&lt;/strong&gt; and &lt;strong&gt;9.4.0.CR2&lt;/strong&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;9.3.2.Final&lt;/strong&gt; includes bug fixes and improvements.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Highlights of this release include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade to protostream 4.2.1.Final
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9399&quot;&gt;ISPN-9399&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Ship basic analyzers by default
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9429&quot;&gt;ISPN-9429&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Avoid unneeded parentheses in Ickle query string generated by
      QueryBuilder (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9378&quot;&gt;ISPN-9378&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The full list of 9.3.2.Final fixes are
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12338661&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;9.4.0.CR2&lt;/strong&gt; has been released due to an internal issue we experienced
      releasing CR1.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find both releases on our
      &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download page&lt;/a&gt;. Please report any issues
      in our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join
      the conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/08/27/infinispan-940cr1-is-out/</id>
    <title>Infinispan 9.4.0.CR1 is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-08-27T01:34:00-07:00</published>
    <link href="//infinispan.org/blog/2018/08/27/infinispan-940cr1-is-out/" rel="alternate" type="text/html" />
    <author>
      <name>Katia Aresti</name>
    </author>
    <category term=" release"></category>
    <category term="release candidate"></category>
    <summary>
      Dear Infinispan users,
      
      
      We have just released 9.4.0.CR1 which includes bug fixes and
      improvements.
      
      
      Highlights of this release include:
      
      
      
      
      Near cache and client side TTL
      (ISPN-9098) 
      
      
      Allow configuring near cache from hot rod properties
      (ISPN-9385) 
      
      
      Initial support for JSON format in scripts 
      
      
      Default analyzers are provided to use with remote queries
      (ISPN-9429) 
      
      
      Prevent user from configuring passivation with a shared store
      (ISPN-7168) 
      
      
      Enhance RemoteStore to support segmentation
      (ISPN-9376) 
      
      
      Upgrade to RxJava 2.2.0
      (ISPN-9418) 
      
      
      Hot Rod configuration properties have setters now to ease integration
      with other frameworks
      (ISPN-9398) 
      
      
      
      
      The full list of 9.4.0.CR1 fixes are
      here.
      
      
      You can find the release on our download
      page. Please report any issues in our
      issue tracker and join the
      conversation in our Zulip Chat to
      shape up our next release.
      
      
      Enjoy,
      
      
      The...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispan users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released &lt;strong&gt;9.4.0.CR1&lt;/strong&gt; which includes bug fixes and
      improvements.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Highlights of this release include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Near cache and client side TTL
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9098&quot;&gt;ISPN-9098&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Allow configuring near cache from hot rod properties
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9385&quot;&gt;ISPN-9385&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Initial support for JSON format in scripts &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Default analyzers are provided to use with remote queries
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9429&quot;&gt;ISPN-9429&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Prevent user from configuring passivation with a shared store
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-7168&quot;&gt;ISPN-7168&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Enhance RemoteStore to support segmentation
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9376&quot;&gt;ISPN-9376&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Upgrade to RxJava 2.2.0
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9418&quot;&gt;ISPN-9418&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Hot Rod configuration properties have setters now to ease integration
      with other frameworks
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9398&quot;&gt;ISPN-9398&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The full list of 9.4.0.CR1 fixes are
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12337826&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find the release on our &lt;a href=&quot;http://infinispan.org/download/&quot;&gt;download
      page&lt;/a&gt;. Please report any issues in our
      &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and join the
      conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip Chat&lt;/a&gt; to
      shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/08/14/hotrod-clients-c-and-c-830beta1-are-out/</id>
    <title>Hotrod clients C++ and C# 8.3.0.Beta1 are out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-08-14T00:11:00-07:00</published>
    <link href="//infinispan.org/blog/2018/08/14/hotrod-clients-c-and-c-830beta1-are-out/" rel="alternate" type="text/html" />
    <author>
      <name>rigazilla</name>
    </author>
    <category term=" beta"></category>
    <category term="c++"></category>
    <category term="release"></category>
    <category term="c#"></category>
    <summary>
      Dear Infinispanners,
      
      
      The C++ and C# 8.3.0.Beta1 releases are available!
      
      
      Main feature for this release is: transactions. Clients can now run
      sequence of hotrod operations in a transactional way. Basic methods are
      provided to begin, commit or rollback a transaction over an hotrod
      connection (hotrod 2.7 and Infinispan 9.3+ are required).
      API are quite easy to use:
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      Source code, binaries and docs are at the usual place. Thank you for
      following us!
      The Infinispan Team
      
      
      Release
      notes
      [2] https://github.com/infinispan/cpp-client/tree/8.3.0.Beta1[C code
      for 8.3.0.Beta1]
      [2#] C#
      code for 8.3.0.Beta1...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispanners,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The C++ and C# 8.3.0.Beta1 releases are available!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Main feature for this release is: transactions. Clients can now run
      sequence of hotrod operations in a transactional way. Basic methods are
      provided to begin, commit or rollback a transaction over an hotrod
      connection (hotrod 2.7 and Infinispan 9.3+ are required).
      API are quite easy to use:&lt;/p&gt;
      &lt;/div&gt;
      &lt;table class=&quot;tableblock frame-all grid-all stretch&quot;&gt;
      &lt;colgroup&gt;
      &lt;col style=&quot;width: 50%;&quot; /&gt;
      &lt;col style=&quot;width: 50%;&quot; /&gt;
      &lt;/colgroup&gt;
      &lt;tbody&gt;
      &lt;tr&gt;
      &lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;/td&gt;
      &lt;td class=&quot;tableblock halign-left valign-top&quot;&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Source code, binaries and docs are at the usual place. Thank you for
      following us!
      The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12314125&amp;amp;version=12338869&quot;&gt;Release
      notes&lt;/a&gt;
      [2] https://github.com/infinispan/cpp-client/tree/8.3.0.Beta1[C code
      for 8.3.0.Beta1]
      [2#] &lt;a href=&quot;https://github.com/infinispan/dotnet-client/tree/8.3.0.Beta1&quot;&gt;C#
      code for 8.3.0.Beta1&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/08/13/nodejs-client-050-with-improved/</id>
    <title>Node.js client 0.5.0 released with improved stability and better OSX integration</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-08-13T00:44:00-07:00</published>
    <link href="//infinispan.org/blog/2018/08/13/nodejs-client-050-with-improved/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" release"></category>
    <category term="javascript"></category>
    <category term="js-client"></category>
    <category term="node.js"></category>
    <category term="mac"></category>
    <summary>
      Infinispan Node.js client
      0.5.0 was released last week.
      It comes with much improved stability under heavy load conditions and
      hence it&#8217;s a recommended upgrade for any current users.
      
      
      On top of that, a configuration option called topologyUpdates (true
      (default) / false) has been added to disable topology updates. This can
      be useful when trying to access Infinispan server running within a
      Docker container on MacOs. Without this option to disable topology
      updates, Node.js client receives internal Docker IP addresses on first
      contact which cannot be accessed from outside Docker on MacOs. See
      this
      previous blog post for more details.
      
      
      If you&#8217;re a Node.js user and want to store data remotely in Infinispan
      server instances, please...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan Node.js client
      &lt;a href=&quot;https://www.npmjs.com/package/infinispan&quot;&gt;0.5.0&lt;/a&gt; was released last week.
      It comes with much improved stability under heavy load conditions and
      hence it’s a recommended upgrade for any current users.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;On top of that, a configuration option called topologyUpdates (&lt;strong&gt;true
      (default) &lt;/strong&gt;/ false) has been added to disable topology updates. This can
      be useful when trying to access Infinispan server running within a
      Docker container on MacOs. Without this option to disable topology
      updates, Node.js client receives internal Docker IP addresses on first
      contact which cannot be accessed from outside Docker on MacOs. See
      &lt;a href=&quot;https://blog.infinispan.org/2018/03/accessing-infinispan-inside-docker-for.html&quot;&gt;this
      previous blog post&lt;/a&gt; for more details.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;If you’re a Node.js user and want to store data remotely in Infinispan
      server instances, please give the client a go and tell us what you think
      of it via our &lt;a href=&quot;https://developer.jboss.org/en/infinispan/content&quot;&gt;forum&lt;/a&gt;,
      via our &lt;a href=&quot;https://issues.jboss.org/projects/HRJS&quot;&gt;issue tracker&lt;/a&gt; or via
      &lt;a href=&quot;https://zulipchat.com/&quot;&gt;Zulip&lt;/a&gt; on
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Infinispan channel&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/08/03/infinispan-users-we-have-just-released-9/</id>
    <title>Infinispan 9.4.0.Beta1 is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-08-03T13:37:00-07:00</published>
    <link href="//infinispan.org/blog/2018/08/03/infinispan-users-we-have-just-released-9/" rel="alternate" type="text/html" />
    <author>
      <name>Pedro Ruivo</name>
    </author>
    <category term=" release"></category>
    <category term="beta"></category>
    <summary>
      Infinispan users,
      
      
      We have just released 9.4.0.Beta1 which includes bug fixes and
      improvements. Highlights of this release include:
      
      
      Removal of WebSocket server support
      (ISPN-9386);
      
      
      One step closer to remove compatibility mode, by dropping it from Remote
      Queries, Tasks and Scripts
      (ISPN-9180,
      ISPN-9182)
      
      
      Recovery Support for Hot Rod client transactions
      (ISPN-9261)
      
      
      Fixed issue with Hot Rod client near cache for async operations
      (ISPN-9393)
      
      
      Improvements in Ickle
      (ISPN-9378)
      
      
      Additional Segmented Stores
      
      
      RocksDB supports single database segmentation
      (ISPN-9375)
      
      
      RemoteStore segmented for additional stream performance
      (ISPN-9376)
      
      
      RocksDB now allows for properties to be provided to configure underlying
      database (ISPN-9371)
      
      
      Component Upgrades:
      
      
      
      
      Protostream upgraded to version 4.2.1.Final
      (ISPN-9399)
      
      
      Hibernate ORM upgraded to version 5.3.4.Final
      (ISPN-9406)
      
      
      
      
      Other bug fixes.
      
      
      The full list of 9.4.0.Beta1 fixes are
      here.
      
      
      You can find both releases on our
      download page. Please...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Infinispan users,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have just released 9.4.0.Beta1 which includes bug fixes and
      improvements. Highlights of this release include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Removal of WebSocket server support
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9386&quot;&gt;ISPN-9386&lt;/a&gt;);&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;One step closer to remove compatibility mode, by dropping it from Remote
      Queries, Tasks and Scripts
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9180&quot;&gt;ISPN-9180&lt;/a&gt;,
      &lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9182&quot;&gt;ISPN-9182&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Recovery Support for Hot Rod client transactions
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9261&quot;&gt;ISPN-9261&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Fixed issue with Hot Rod client near cache for async operations
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9393&quot;&gt;ISPN-9393&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Improvements in Ickle
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9378&quot;&gt;ISPN-9378&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Additional Segmented Stores&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RocksDB supports single database segmentation
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9375&quot;&gt;ISPN-9375&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RemoteStore segmented for additional stream performance
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9376&quot;&gt;ISPN-9376&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;RocksDB now allows for properties to be provided to configure underlying
      database (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9371&quot;&gt;ISPN-9371&lt;/a&gt;)&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Component Upgrades:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Protostream upgraded to version 4.2.1.Final
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9399&quot;&gt;ISPN-9399&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Hibernate ORM upgraded to version 5.3.4.Final
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9406&quot;&gt;ISPN-9406&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Other bug fixes.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The full list of 9.4.0.Beta1 fixes are
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12337825&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find both releases on our
      &lt;a href=&quot;https://infinispan.org/download/&quot;&gt;download&lt;/a&gt; page. Please report any
      issues in our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and
      join the conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip
      Chat&lt;/a&gt; to shape up our next release.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Enjoy,
      The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/07/24/infinispan-spark-connector-08-relased/</id>
    <title>Infinispan Spark connector 0.8 released</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-07-24T03:08:00-07:00</published>
    <link href="//infinispan.org/blog/2018/07/24/infinispan-spark-connector-08-relased/" rel="alternate" type="text/html" />
    <author>
      <name>Gustavo</name>
    </author>
    <category term=" release"></category>
    <category term="spark"></category>
    <category term="server"></category>
    <summary>
      The Infinispan Spark connector version 0.8 has been released and is
      available in Maven central and
      SparkPackages.
      
      
      This is a maintenance only release to bring compatibility with Spark 2.3
      and Infinispan 9.3.
      
      
      For more information about the connector, please consult the
      documentation and also
      try the docker based
      sample.
      
      
      For feedback and general help, please use the Infinispan
      chat....
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Infinispan Spark connector version 0.8 has been released and is
      available in Maven central and
      &lt;a href=&quot;https://spark-packages.org/?q=infinispan-spark&quot;&gt;SparkPackages&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This is a maintenance only release to bring compatibility with Spark 2.3
      and Infinispan 9.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For more information about the connector, please consult the
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spark&quot;&gt;documentation&lt;/a&gt; and also
      try the docker based
      &lt;a href=&quot;https://github.com/infinispan/infinispan-spark/tree/master/examples/twitter&quot;&gt;sample.&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For feedback and general help, please use the Infinispan
      &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;chat.&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/07/16/infinispan-931final-and-940alpha1/</id>
    <title>Infinispan 9.3.1.Final and 9.4.0.Alpha1</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-07-16T02:41:00-07:00</published>
    <link href="//infinispan.org/blog/2018/07/16/infinispan-931final-and-940alpha1/" rel="alternate" type="text/html" />
    <author>
      <name>Unknown</name>
    </author>
    <category term=" release"></category>
    <summary>
      We have 2 new releases to announce today:
      
      
      9.3.1.Final includes some important bug fixes, and we recommend all
      users of 9.3.0.Final to upgrade:
      
      
      
      
      Fix for CVE-2018-1131 that allows unchecked deserialization in the
      server from binary java , XML and JSON payloads
      
      
      Fixed transcoding from JSON/XML to java objects with deployed entities
      (ISPN-9336)
      
      
      Look up key in cache loader if the entry has expired but hasn&#8217;t yet
      been removed from the data container
      (ISPN-9370)
      
      
      Avoid circular references in exceptions, as they were causing stack
      overflows with logback 1.2.x
      (ISPN-9362)
      
      
      
      
      See the full list of bug fixes
      here.
      
      
      9.4.0.Alpha1 its the first iteration towards our next big release.
      Highlights include:
      
      
      
      
      The Spring Cache provider now supports two configuration properties
      with...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have 2 new releases to announce today:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;9.3.1.Final&lt;/strong&gt; includes some important bug fixes, and we recommend all
      users of 9.3.0.Final to upgrade:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Fix for CVE-2018-1131 that allows unchecked deserialization in the
      server from binary java , XML and JSON payloads&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Fixed transcoding from JSON/XML to java objects with deployed entities
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9336&quot;&gt;ISPN-9336&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Look up key in cache loader if the entry has expired but hasn’t yet
      been removed from the data container
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9370&quot;&gt;ISPN-9370&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Avoid circular references in exceptions, as they were causing stack
      overflows with logback 1.2.x
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9362&quot;&gt;ISPN-9362&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;See the full list of bug fixes
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12338251&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;9.4.0.Alpha1&lt;/strong&gt; its the first iteration towards our next big release.
      Highlights include:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The Spring Cache provider now supports two configuration properties
      with which you can determine how long to wait for read and write
      operations respectively
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9301&quot;&gt;ISPN-9301&lt;/a&gt;).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;You can now obtain nanosecond-resolution statistics for average
      read/write/remove time
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9352&quot;&gt;ISPN-9352&lt;/a&gt;).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Queries now throw an AvailabilityException if the cache is in degraded
      mode and partition mode isn’t ALLOW_READ_WRITES
      ([&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-9340&quot;&gt;ISPN-9340&lt;/a&gt;)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Admin Console: You can now delete cache from Administration console
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-7291&quot;&gt;ISPN-7291&lt;/a&gt;).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Following up on the segmented data container in 9.3.0.Final, cache
      stores can now be segmented as well, allowing for better performance for
      bulk operations (ie. cache.size(), cache.entrySet().stream())&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;The server-side Hot Rod parser is now generated automatically
      (&lt;a href=&quot;https://issues.jboss.org/browse/ISPN-8981&quot;&gt;ISPN-8981&lt;/a&gt;) &lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The full list of 9.4.0.Alpha1 fixes is
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12337824&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;You can find both releases on our
      &lt;a href=&quot;https://infinispan.org/download/&quot;&gt;download page&lt;/a&gt;. Please report any
      issues in our &lt;a href=&quot;https://issues.jboss.org/projects/ISPN&quot;&gt;issue tracker&lt;/a&gt; and
      join the conversation in our &lt;a href=&quot;https://infinispan.zulipchat.com/&quot;&gt;Zulip
      Chat&lt;/a&gt; to shape up our next release.
       &lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/07/02/hotrod-clients-c-and-c-830alpha1-are-out/</id>
    <title>Hotrod clients C++ and C# 8.3.0.Alpha1 are out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-07-02T01:51:00-07:00</published>
    <link href="//infinispan.org/blog/2018/07/02/hotrod-clients-c-and-c-830alpha1-are-out/" rel="alternate" type="text/html" />
    <author>
      <name>rigazilla</name>
    </author>
    <category term=" c++"></category>
    <category term="release"></category>
    <category term="minor release"></category>
    <category term="alpha"></category>
    <category term="c#"></category>
    <summary>
      Dear Infinispanners,
      
      
      The C++ and C# 8.3.0.Alpha1 releases are available!
      
      
      Both the clients come with these new features:
      
      
      
      
      counter operations, to use cluster distributed counters [1]
      
      
      admin operations, to create/remove cache programmatically at runtime
      
      
      
      
      For the .NET Core lovers, there&#8217;s a work in progress to implement the
      dotnet core build for the C# client [3].
      Features list, code and bits are available as usual: [4] [5] [6].
      
      
      Cheers,
      The Infinispan Team
      
      
      Clustered
      Counters
      
      
      Hot
      Rod Admin Tasks
      
      
      How to
      build à la .NET Core manière
      
      
      Release
      notes
      [5] https://github.com/infinispan/cpp-client/tree/8.3.0.Alpha1[C
      code for 8.3.0.Alpha1]
      
      
      C#
      code for 8.3.0.Alpha1...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Dear Infinispanners,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The C++ and C# 8.3.0.Alpha1 releases are available!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Both the clients come with these new features:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;counter operations, to use cluster distributed counters [1]&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;admin operations, to create/remove cache programmatically at runtime&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For the .NET Core lovers, there’s a work in progress to implement the
      dotnet core build for the C# client [3].
      Features list, code and bits are available as usual: [4] [5] [6].&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,
      The Infinispan Team&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://infinispan.org/docs/stable/user_guide/user_guide.html#clustered_counters&quot;&gt;Clustered
      Counters&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://infinispan.org/docs/stable/user_guide/user_guide.html#hot_rod_admin_tasks&quot;&gt;Hot
      Rod Admin Tasks&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/dotnet-client/blob/master/README.md&quot;&gt;How to
      build à la .NET Core manière&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12314125&amp;amp;version=12337514&quot;&gt;Release
      notes&lt;/a&gt;
      [5] https://github.com/infinispan/cpp-client/tree/8.3.0.Alpha1[C
      code for 8.3.0.Alpha1]&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/infinispan/dotnet-client/tree/8.3.0.Alpha1https://github.com/infinispan/dotnet-client/tree/8.3.0.Alpha1&quot;&gt;C#
      code for 8.3.0.Alpha1&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/06/27/making-java-objects-queryable-by/</id>
    <title>Making Java objects queryable by Infinispan remote clients</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-06-27T04:46:00-07:00</published>
    <link href="//infinispan.org/blog/2018/06/27/making-java-objects-queryable-by/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" remote query"></category>
    <summary>
      The following is a common question amongst Infinispan community users:
      
      
      
      
      How do I make my Java objects queryable by remote clients? 
      
      
      
      
      
      
      Annotation Method
      
      The simplest way is to take advantage
      Infinispan Protostream
      annotations to mark your objects queryable and decide how each object
      field should be indexed. Example:
      
      
      Then, the
      ProtoSchemaBuilder
      can inspect the annotated class and derive a
      Google Protocol Buffers
      schema file from it. Example:
      
      
      Finally, the schema file needs to be registered in the
      “___protobuf_metadata” cache:
      
      
      Although this is by far the easiest way to make your Java objects
      queryable, this method might not always be viable. For example, you
      might not be able to modify the Java object classes to add the
      annotations....
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The following is a common question amongst Infinispan community users:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;quoteblock&quot;&gt;
      &lt;blockquote&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;&lt;strong&gt;How do I make my Java objects queryable by remote clients?&lt;/strong&gt; &lt;/p&gt;
      &lt;/div&gt;
      &lt;/blockquote&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_annotation_method&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_annotation_method&quot;&gt;&lt;/a&gt;Annotation Method&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The simplest way is to take advantage
      &lt;a href=&quot;https://github.com/infinispan/protostream&quot;&gt;Infinispan Protostream&lt;/a&gt;
      annotations to mark your objects queryable and decide how each object
      field should be indexed. Example:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Then, the
      &lt;a href=&quot;https://github.com/infinispan/protostream/blob/master/core/src/main/java/org/infinispan/protostream/annotations/ProtoSchemaBuilder.java&quot;&gt;ProtoSchemaBuilder&lt;/a&gt;
      can inspect the annotated class and derive a
      &lt;a href=&quot;https://developers.google.com/protocol-buffers/&quot;&gt;Google Protocol Buffers&lt;/a&gt;
      schema file from it. Example:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Finally, the schema file needs to be registered in the
      “___protobuf_metadata” cache:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Although this is by far the easiest way to make your Java objects
      queryable, this method might not always be viable. For example, you
      might not be able to modify the Java object classes to add the
      annotations. For such use cases, a more verbose method is available that
      does not require modifying the source code of the Java object.&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class=&quot;sect2&quot;&gt;
      &lt;h3 id=&quot;_plain_object_method&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#_plain_object_method&quot;&gt;&lt;/a&gt;Plain Object Method&lt;/h3&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For example, given this Java object:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A Protocol Buffers schema must be defined where comments are used to
      define the object as queryable and decide how each field is indexed:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This method also requires a
      &lt;a href=&quot;https://github.com/infinispan/protostream/blob/master/core/src/main/java/org/infinispan/protostream/MessageMarshaller.java&quot;&gt;Protostream
      message marshaller&lt;/a&gt; to be defined which specifies how each field is
      serialized/deserialized:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;This method still requires the Protocol Buffers schema to be registered
      remotely, but on top of that, the schema and marshaller need to be
      registered in the client:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Clearly, this second method is a lot more verbose and more laborious
      when refactoring. If any changes are made to the Java object, the
      marshaller and Protocol Buffer schema need to also be changed
      accordingly. This is done automatically in the first method.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Both methods are demonstrated in full in the
      &lt;a href=&quot;https://github.com/infinispan-demos/queryable-pojos&quot;&gt;queryable-pojos
      demo&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/06/26/infinispan-930final-is-out/</id>
    <title>Infinispan 9.3.0.Final is out!</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-06-26T00:12:00-07:00</published>
    <link href="//infinispan.org/blog/2018/06/26/infinispan-930final-is-out/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" release"></category>
    <category term="final"></category>
    <summary>
      We&#8217;re delighted to announce the release of Infinispan 9.3.0.Final, which
      is a culmination of several months of hard work by the entire Infinispan
      community. Here&#8217;s a summary of what you can find within it:
      
      
      First final release to work with both Java 8 and Java 10. Note that
      Infinispan only works in classpath mode.
      
      
      Transaction support Hot Rod. The java Hot Rod client can participate in
      Java transactions via Synchronization or XA enlistment. Note that
      recovery isn&#8217;t supported yet.
      
      
      Caches can now configure the maximum number of attempts to start a
      CacheWriter/CacheLoader on startup before cache creation fails.
      
      
      Write-behind stores are now fault-tolerant by default.
      
      
      Segmented On Heap Data Container. It improves...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We’re delighted to announce the release of Infinispan 9.3.0.Final, which
      is a culmination of several months of hard work by the entire Infinispan
      community. Here’s a summary of what you can find within it:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;First final release to work with both Java 8 and Java 10. Note that
      Infinispan only works in classpath mode.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Transaction support Hot Rod. The java Hot Rod client can participate in
      Java transactions via Synchronization or XA enlistment. Note that
      recovery isn’t supported yet.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Caches can now configure the maximum number of attempts to start a
      CacheWriter/CacheLoader on startup before cache creation fails.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Write-behind stores are now fault-tolerant by default.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Segmented On Heap Data Container. It improves performance of stream
      operations.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Server upgraded to Wildfly 13.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;We have introduced several WildFly feature packs to make it easier for
      Infinispan to be utilised on WildFly instances via the Server
      Provisioning Plugin. The following feature packs have been created, most
      notably:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;infinispan-feature-pack-client&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;All of the modules required to connect to a hotrod server via the
      client&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;infinispan-feature-pack-embedded&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The modules required for embedded instances of Infinispan&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;infinispan-feature-pack-embedded-query&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;The same as above but with query capabilities&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;infinispan-feature-pack-wf-modules&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;This is equivalent to the Wildfly-modules.zip&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Hibernate second-level cache provider works with Hibernate ORM 5.3.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The Hot Rod Server allows now to use multiple protocols with a Single
      Port. The initial version supports HTTP/1.1, HTTP/2 and Hot Rod.
      Switching protocols can be done using TLS/ALPN and HTTP/1.1 Upgrade
      header.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Admin console - improved all editors (schema, scripts, JSON data) to
      include syntax highlighting.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Several enhancements in the Java Hot Rod client allowing to read and
      write data in different formats such as JSON, for cache operations and
      deployed filters/converters.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cluster wide max idle expiration.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Component Upgrades&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;ulist&quot;&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;p&gt;Hibernate Search 5.10&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
      &lt;p&gt;Hibernate ORM 5.3&lt;/p&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Numerous bug fixes which improve stability&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;For more details, please check our
      &lt;a href=&quot;https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12336209&quot;&gt;issue
      tracking release notes&lt;/a&gt;.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Thanks to everyone involved in this release! Onward to Infinispan 9.4!&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
  <entry>
    <id>//infinispan.org/blog/2018/06/05/thanks-great-indian-developer-summit/</id>
    <title>Thanks Great Indian Developer Summit &amp; Voxxed Days Zurich</title>
    <updated>2020-01-27T11:57:20+00:00</updated>
    <published>2018-06-05T07:00:00-07:00</published>
    <link href="//infinispan.org/blog/2018/06/05/thanks-great-indian-developer-summit/" rel="alternate" type="text/html" />
    <author>
      <name>Galder Zamarreño</name>
    </author>
    <category term=" conference"></category>
    <summary>
      A few days after
      Devoxx
      France, I headed for
      Great Indian Developer
      Summit in Bangalore where I spoke about handling streaming data on top
      of a Kubernetes platform. This was a very similar talk to the one I gave
      at JFokus but with some important changes.
      Together with Clement we created a small
      RxJava 2 façade for Infinispan.
      When combined with Vert.x RxJava 2
      API, we could finally have an idiomatic way of handling streaming data
      asynchronously and coordinating events purely using RxJava 2 APIs. This
      is crucial for working with streaming data in an efficient way. On top
      of that, I made some changes to push the binary data used by the...
    </summary>
    <content type="html">
      &lt;div id=&quot;preamble&quot;&gt;
      &lt;div class=&quot;sectionbody&quot;&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;A few days after
      &lt;a href=&quot;https://blog.infinispan.org/2018/04/danke-javaland-merci-devoxx-france.html&quot;&gt;Devoxx
      France&lt;/a&gt;, I headed for
      &lt;a href=&quot;http://www.developermarch.com/developersummit/&quot;&gt;Great Indian Developer
      Summit&lt;/a&gt; in Bangalore where I spoke about handling streaming data on top
      of a Kubernetes platform. This was a very similar talk to the one I gave
      at &lt;a href=&quot;https://www.jfokus.se/&quot;&gt;JFokus&lt;/a&gt; but with some important changes.
      Together with Clement we created a small
      &lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot;&gt;RxJava 2&lt;/a&gt; façade for Infinispan.
      When combined with &lt;a href=&quot;https://vertx.io/docs/vertx-rx/java2/&quot;&gt;Vert.x RxJava 2
      API&lt;/a&gt;, we could finally have an idiomatic way of handling streaming data
      asynchronously and coordinating events purely using RxJava 2 APIs. This
      is crucial for working with streaming data in an efficient way. On top
      of that, I made some changes to push the binary data used by the demo
      outside of the deployment.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Unfortunately Murphy struck during the presentation and I was unable to
      run the live coding demo. A problem with Docker size image during
      preparation combined with a cleanup I ran before the talk meant some of
      the images had to be re-downloaded. The wireless internet connection at
      the conference nor the mobile connection were good enough for me to
      recover it. Once back in the hotel where I had a stable connection I was
      able to record a screencast of the steps I would have followed during
      the Great Indian Developer Summit talk. You can find this screencast
      below:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The code from the demo can be
      found &lt;a href=&quot;https://github.com/infinispan-demos/streaming-data-kubernetes&quot;&gt;here&lt;/a&gt;.
      The live coding steps I followed are defined
      &lt;a href=&quot;https://github.com/infinispan-demos/streaming-data-kubernetes/blob/master/live-coding/gids-18.org&quot;&gt;here&lt;/a&gt;.
      Finally the slides can be found here:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Finally, for something slightly different, back in March I joined Ray
      Tsang for a talk at &lt;a href=&quot;https://voxxeddays.com/zurich/&quot;&gt;Voxxed Days Zurich&lt;/a&gt;.
      This was a really fun talk to be part of! We combined past stories of my
      time at JBoss support with Ray’s Kubernetes troubleshooting experience
      to create an engaging talk :). You can find the video below:&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;The week after Sebastian Łaskawiec and I travelled to Red Hat Summit as
      part of the work we did to integrate Red Hat Data Grid (Infinispan
      product version) into the Scavenger Hunt game presented on the keynote
      of the last day. Both Sebastian and I have been working on a blog series
      which will be published very soon.&lt;/p&gt;
      &lt;/div&gt;
      &lt;div class=&quot;paragraph&quot;&gt;
      &lt;p&gt;Cheers,
      Galder&lt;/p&gt;
      &lt;/div&gt;
      &lt;/div&gt;
      &lt;/div&gt;
    </content>
  </entry>
</feed>
